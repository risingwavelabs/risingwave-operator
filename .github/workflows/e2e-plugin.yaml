name: plugin e2e test

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "pkg/command/**"
      - "cmd/plugin/main.go"
      - "e2e/**"
  push:
    branches:
      - main

  # For manually triggering workflow
  workflow_dispatch:

jobs:
  start-runner:
    name: start-runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.PAT }}
          ec2-image-id: ami-01c7385f8ab706180
          ec2-instance-type: c5.4xlarge
          subnet-id: subnet-08978fdb70c2d5d11
          security-group-id: sg-08d84a86ca86067a8
          
  e2e-test:
    needs:
      - start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: build-plugin #TODO: will remove after release stable plugin.
        run: |
          mkdir -p "/tmp/go"
          mkdir -p "/tmp/gocache"
          HOME="/" GOMODCACHE="/tmp/gocache" GOPATH="/tmp/go" go build -o bin/kubectl-rw cmd/plugin/main.go
          mv ./bin/kubectl-rw /usr/local/bin/kubectl-rw
          kubectl rw version
      - name: e2e-test
        run: |
          sudo su
          source /etc/bash.bashrc
          make e2e-plugin
        shell: bash -leo pipefail {0}


  stop-runner:
    name: stop-runner
    needs:
      - start-runner
      - e2e-test
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Stop EC2 runner A
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.PAT }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
        if: ${{ always() }}
