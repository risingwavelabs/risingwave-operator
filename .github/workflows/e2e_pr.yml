name: E2E Test (PR)

on:
  workflow_dispatch:    # For manually triggering workflow
  pull_request:
    branches: [ main ]
  merge_group:
    branches: [ main ]

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create Kind Cluster
        uses: helm/kind-action@v1.8.0
      - name: Install Cert Manager
        shell: bash
        working-directory: ./
        run: |
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.12.0/cert-manager.yaml
      - name: Wait Cert Manager
        working-directory: ./
        if: ${{ always() }}
        run: |
          curl -sSL -o cmctl.tar.gz https://github.com/cert-manager/cert-manager/releases/download/v1.12.0/cmctl-linux-amd64.tar.gz
          tar xzf cmctl.tar.gz
          sudo mv cmctl /usr/local/bin
          cmctl check api --wait=2m
      - name: Install Operator
        shell: bash
        working-directory: ./
        if: ${{ always() }}
        run: |
          kubectl apply --server-side -f config/risingwave-operator.yaml
      - name: Wait Operator
        shell: bash
        working-directory: ./
        if: ${{ always() }}
        run: |
          kubectl wait --for=condition=Ready Pods --all --namespace risingwave-operator-system --timeout=5m
      - name: E2E Test
        shell: bash
        working-directory: ./
        if: ${{ always() }}
        run: |
          make e2e-test
      - name: Test Minio RisingWave
        shell: bash
        working-directory: ./
        if: ${{ always() }}
        run: |
          kubectl create namespace risingwave-etcd-minio
          kubectl apply -f docs/manifests/risingwave/risingwave-etcd-minio.yaml -n risingwave-etcd-minio
          kubectl wait --for=condition=Running RisingWave --all --namespace risingwave-etcd-minio --timeout=5m
          kubectl delete -f docs/manifests/risingwave/risingwave-etcd-minio.yaml -n risingwave-etcd-minio
      - name: Test HDFS RisingWave
        shell: bash
        working-directory: ./
        if: ${{ always() }}
        run: |
          kubectl create namespace risingwave-etcd-hdfs
          kubectl apply -f docs/manifests/risingwave/risingwave-etcd-hdfs.yaml -n risingwave-etcd-hdfs
          kubectl wait --for=condition=Running RisingWave --all --namespace risingwave-etcd-hdfs --timeout=5m
          kubectl delete -f docs/manifests/risingwave/risingwave-etcd-hdfs.yaml -n risingwave-etcd-hdfs
