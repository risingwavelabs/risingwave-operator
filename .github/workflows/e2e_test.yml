name: e2e test

on:
  pull_request:
    paths:
      - "*/**"
  push:
    branches:
      - main

  # For manually triggering workflow
  workflow_dispatch:

jobs:
  start-control-plane:
    name: start-control-plane
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.PAT }}
          ec2-image-id: ami-09b6e7b589c69bf56
          ec2-instance-type: c5.xlarge
          subnet-id: subnet-08978fdb70c2d5d11
          security-group-id: sg-07252330b11a5c999

  kubeadm-init:
    needs:
      - start-control-plane
    runs-on: ${{ needs.start-control-plane.outputs.label }}
    outputs:
      token: ${{ steps.setup-control-plane.outpus.token }}
      cert: ${{ steps.setup-control-plane.outpus.cert }}
      endpoint: ${{ steps.setup-control-plane.outpus.endpoint }}
    steps:
      - name: Kubeadm init
        id: setup-control-plane
        run: |
          sudo kubeadm init --cri-socket unix:///var/run/crio/crio.sock --pod-network-cidr 10.244.0.0/16 --control-plane-endpoint $(hostname):6443
          export KUBECONFIG=/etc/kubernetes/admin.conf
          sudo KUBECONFIG=/etc/kubernetes/admin.conf kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
          endpoint=$(hostname):6443
          echo "::set-output name=CONTROL_PLANE_ENDPOINT::$endpoint"
          cert=$(openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //')
          echo "::set-output name=cert::$cert"
          token=$(sudo kubeadm token create)
          echo "::set-output name=token::$token"

  start-worker-node:
    name: start-worker-node
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-worker-node.outputs.label }}
      ec2-instance-id: ${{ steps.start-worker-node.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Start worker node
        id: start-worker-node
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.PAT }}
          ec2-image-id: ami-09b6e7b589c69bf56
          ec2-instance-type: c5.xlarge
          subnet-id: subnet-08978fdb70c2d5d11
          security-group-id: sg-07252330b11a5c999

  kubeadm-join:
    needs:
      - start-worker-node
      - kubeadm-init
    runs-on: ${{ needs.start-worker-node.outputs.label }}
    steps:
      - name: Kubeadm init
        id: setup-worker-node
        run: |
          sudo kubeadm join ${{ needs.kubeadm-init.outputs.endpoint }} --cri-socket unix:///var/run/crio/crio.sock --token ${{ needs.kubeadm-init.outputs.token }} --discovery-token-ca-cert-hash sha256:${{ needs.kubeadm-init.outputs.cert }}

  e2e:
    needs: 
      - kubeadm-init
      - kubeadm-join
      - start-control-plane
    runs-on: ${{ needs.start-control-plane.outpus.label }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: e2e-test
        run: |
          sudo su
          make e2e-test

  stop-control-plane:
    name: stop-control-plane
    needs:
      - e2e
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Stop control plane node
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.PAT }}
          label: ${{ needs.start-control-plane.outputs.label }}
          ec2-instance-id: ${{ needs.start-control-plane.outputs.ec2-instance-id }}
        if: ${{ always() }}

  stop-worker-node:
    name: stop-worker-node
    needs:
      - e2e
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Stop worker node
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.PAT }}
          label: ${{ needs.start-worker-node.outputs.label }}
          ec2-instance-id: ${{ needs.start-worker-node.outputs.ec2-instance-id }}
        if: ${{ always() }}
