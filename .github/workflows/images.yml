name: CI for Images

on:
  schedule:             # Run 2am UTC+8(Beijing) everyday
  - cron: '0 18 */1 * *'
  workflow_dispatch:    # For manually triggering workflow
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
    tags:
    - 'v*.*.*'

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Docker meta for GHCR
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ghcr.io/risingwavelabs/risingwave-operator
        tags: |
          type=schedule,prefix=nightly-,pattern={{date 'YYYYMMDD'}}
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern=v{{version}}
          type=semver,pattern=v{{major}}.{{minor}}
          type=semver,pattern=v{{major}}
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}
    - name: Docker meta for DockerHub
      id: dockerhub-meta
      uses: docker/metadata-action@v4
      with:
        images: |
          docker.io/risingwavelabs/risingwave-operator
        tags: |
          type=schedule,prefix=nightly-,pattern={{date 'YYYYMMDD'}}
          type=semver,pattern=v{{version}}
          type=semver,pattern=v{{major}}.{{minor}}
          type=semver,pattern=v{{major}}
          type=raw,value=latest,enable={{is_default_branch}}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Github Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Login to DockerHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: build/Dockerfile
        build-args: |
          VERSION=${{ github.sha }}
        push: ${{ github.event_name != 'pull_request' }}
        platforms: linux/amd64,linux/arm64
        tags: "${{ steps.meta.outputs.tags }}\n${{ steps.dockerhub-meta.outputs.tags }}"
        labels: ${{ steps.meta.outputs.labels }}