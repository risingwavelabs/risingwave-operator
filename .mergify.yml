queue_rules:
  - name: default
    conditions:
      - "check-failure!=e2e-test"
      - "check-failure!=build_docker_images"
      - "check-success=task-list-completed"
      - "check-success=license-header-check"
      - "label=mergify/can-merge"

pull_request_rules:
  - name: Automatic merge on approval (high priority)
    conditions:
      - "base=main"
      - "#approved-reviews-by>=1"
      - "#changes-requested-reviews-by=0"
      - "check-failure!=e2e-test"
      - "check-failure!=unit-test"
      - "check-failure!=build_docker_images"
      - "check-success=task-list-completed"
      - "check-success=license-header-check"
      - "label=mergify/can-merge"
      - "label=mergify/high-priority"
    actions:
      queue:
        name: default
        method: squash
        priority: high

  - name: Automatic merge on approval
    conditions:
      - "base=main"
      - "#approved-reviews-by>=1"
      - "#changes-requested-reviews-by=0"
      - "check-failure!=e2e-test"
      - "check-failure!=unit-test"
      - "check-failure!=build_docker_images"
      - "check-success=task-list-completed"
      - "check-success=license-header-check"
      - "label=mergify/can-merge"
    actions:
      queue:
        name: default
        method: squash
        priority: medium

  - name: Notify author on queue failure
    conditions:
      - "check-failure=Queue: Embarked in merge train"
    actions:
      comment:
        message: >
          Hey @{{ author }}, this pull request failed to merge and has been
          dequeued from the merge train.  If you believe your PR failed in
          the merge train because of a flaky test, requeue it by commenting
          with `@mergifyio requeue`.
          More details can be found on the `Queue: Embarked in merge train`
          check-run.