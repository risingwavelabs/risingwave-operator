---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: risingwaves.risingwave.risingwavelabs.com
spec:
  group: risingwave.risingwavelabs.com
  names:
    categories:
    - all
    - streaming
    kind: RisingWave
    listKind: RisingWaveList
    plural: risingwaves
    shortNames:
    - rw
    singular: risingwave
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Running")].status
      name: RUNNING
      type: string
    - jsonPath: .status.storages.meta.type
      name: STORAGE(META)
      type: string
    - jsonPath: .status.storages.object.type
      name: STORAGE(OBJECT)
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RisingWave is the struct for RisingWave object.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RisingWaveSpec is the overall spec.
            properties:
              components:
                description: The spec of ports and some controllers (such as `restartAt`)
                  of each component, as well as an advanced concept called `group`
                  to override the global template and create groups of Pods, e.g.,
                  deployment in hybrid-arch cluster.
                properties:
                  compactor:
                    description: Compactor component.
                    properties:
                      groups:
                        description: Groups of Pods of compactor component.
                        items:
                          description: RisingWaveComponentGroup is the common deployment
                            group of each component. Currently, we use this group
                            for meta/frontend/compactor.
                          properties:
                            dnsConfig:
                              description: Specifies the DNS parameters of a pod.
                                Parameters specified here will be merged to the generated
                                DNS configuration based on DNSPolicy.
                              properties:
                                nameservers:
                                  description: A list of DNS name server IP addresses.
                                    This will be appended to the base nameservers
                                    generated from DNSPolicy. Duplicated nameservers
                                    will be removed.
                                  items:
                                    type: string
                                  type: array
                                options:
                                  description: A list of DNS resolver options. This
                                    will be merged with the base options generated
                                    from DNSPolicy. Duplicated entries will be removed.
                                    Resolution options given in Options will override
                                    those that appear in the base DNSPolicy.
                                  items:
                                    description: PodDNSConfigOption defines DNS resolver
                                      options of a pod.
                                    properties:
                                      name:
                                        description: Required.
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                searches:
                                  description: A list of DNS search domains for host-name
                                    lookup. This will be appended to the base search
                                    paths generated from DNSPolicy. Duplicated search
                                    paths will be removed.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            image:
                              description: Image for RisingWave component.
                              type: string
                            imagePullPolicy:
                              default: IfNotPresent
                              description: Pull policy of the RisingWave image. The
                                default value is the same as the default of Kubernetes.
                              enum:
                              - Always
                              - Never
                              - IfNotPresent
                              type: string
                            imagePullSecrets:
                              description: Secrets for pulling RisingWave images.
                              items:
                                type: string
                              type: array
                            metadata:
                              description: metadata of the RisingWave's Pods.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations of the object.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels of the object.
                                  type: object
                              type: object
                            name:
                              description: Name of the group.
                              minLength: 1
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: A map of labels describing the nodes to
                                be scheduled on.
                              type: object
                            podTemplate:
                              description: Base template for Pods of RisingWave. By
                                default, there's no such template and the controller
                                will set all unrelated fields to the default value.
                              type: string
                            priorityClassName:
                              description: If specified, indicates the pod's priority.
                                "system-node-critical" and "system-cluster-critical"
                                are two special keywords which indicate the highest
                                priorities with the former being the highest priority.
                                Any other name must be defined by creating a PriorityClass
                                object with that name. If not specified, the pod priority
                                will be default or zero if there is no default.
                              type: string
                            replicas:
                              description: Replicas of Pods in this group.
                              format: int32
                              minimum: 0
                              type: integer
                            resources:
                              description: Resources of the RisingWave component.
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            securityContext:
                              description: 'SecurityContext holds pod-level security
                                attributes and common container settings. Optional:
                                Defaults to empty.  See type description for default
                                values of each field.'
                              properties:
                                fsGroup:
                                  description: "A special supplemental group that
                                    applies to all containers in a pod. Some volume
                                    types allow the Kubelet to change the ownership
                                    of that volume to be owned by the pod: \n 1. The
                                    owning GID will be the FSGroup 2. The setgid bit
                                    is set (new files created in the volume will be
                                    owned by FSGroup) 3. The permission bits are OR'd
                                    with rw-rw---- \n If unset, the Kubelet will not
                                    modify the ownership and permissions of any volume.
                                    Note that this field cannot be set when spec.os.name
                                    is windows."
                                  format: int64
                                  type: integer
                                fsGroupChangePolicy:
                                  description: 'fsGroupChangePolicy defines behavior
                                    of changing ownership and permission of the volume
                                    before being exposed inside Pod. This field will
                                    only apply to volume types which support fsGroup
                                    based ownership(and permissions). It will have
                                    no effect on ephemeral volume types such as: secret,
                                    configmaps and emptydir. Valid values are "OnRootMismatch"
                                    and "Always". If not specified, "Always" is used.
                                    Note that this field cannot be set when spec.os.name
                                    is windows.'
                                  type: string
                                runAsGroup:
                                  description: The GID to run the entrypoint of the
                                    container process. Uses runtime default if unset.
                                    May also be set in SecurityContext.  If set in
                                    both SecurityContext and PodSecurityContext, the
                                    value specified in SecurityContext takes precedence
                                    for that container. Note that this field cannot
                                    be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                runAsNonRoot:
                                  description: Indicates that the container must run
                                    as a non-root user. If true, the Kubelet will
                                    validate the image at runtime to ensure that it
                                    does not run as UID 0 (root) and fail to start
                                    the container if it does. If unset or false, no
                                    such validation will be performed. May also be
                                    set in SecurityContext.  If set in both SecurityContext
                                    and PodSecurityContext, the value specified in
                                    SecurityContext takes precedence.
                                  type: boolean
                                runAsUser:
                                  description: The UID to run the entrypoint of the
                                    container process. Defaults to user specified
                                    in image metadata if unspecified. May also be
                                    set in SecurityContext.  If set in both SecurityContext
                                    and PodSecurityContext, the value specified in
                                    SecurityContext takes precedence for that container.
                                    Note that this field cannot be set when spec.os.name
                                    is windows.
                                  format: int64
                                  type: integer
                                seLinuxOptions:
                                  description: The SELinux context to be applied to
                                    all containers. If unspecified, the container
                                    runtime will allocate a random SELinux context
                                    for each container.  May also be set in SecurityContext.  If
                                    set in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence
                                    for that container. Note that this field cannot
                                    be set when spec.os.name is windows.
                                  properties:
                                    level:
                                      description: Level is SELinux level label that
                                        applies to the container.
                                      type: string
                                    role:
                                      description: Role is a SELinux role label that
                                        applies to the container.
                                      type: string
                                    type:
                                      description: Type is a SELinux type label that
                                        applies to the container.
                                      type: string
                                    user:
                                      description: User is a SELinux user label that
                                        applies to the container.
                                      type: string
                                  type: object
                                seccompProfile:
                                  description: The seccomp options to use by the containers
                                    in this pod. Note that this field cannot be set
                                    when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: localhostProfile indicates a profile
                                        defined in a file on the node should be used.
                                        The profile must be preconfigured on the node
                                        to work. Must be a descending path, relative
                                        to the kubelet's configured seccomp profile
                                        location. Must only be set if type is "Localhost".
                                      type: string
                                    type:
                                      description: "type indicates which kind of seccomp
                                        profile will be applied. Valid options are:
                                        \n Localhost - a profile defined in a file
                                        on the node should be used. RuntimeDefault
                                        - the container runtime default profile should
                                        be used. Unconfined - no profile should be
                                        applied."
                                      type: string
                                  required:
                                  - type
                                  type: object
                                supplementalGroups:
                                  description: A list of groups applied to the first
                                    process run in each container, in addition to
                                    the container's primary GID.  If unspecified,
                                    no groups will be added to any container. Note
                                    that this field cannot be set when spec.os.name
                                    is windows.
                                  items:
                                    format: int64
                                    type: integer
                                  type: array
                                sysctls:
                                  description: Sysctls hold a list of namespaced sysctls
                                    used for the pod. Pods with unsupported sysctls
                                    (by the container runtime) might fail to launch.
                                    Note that this field cannot be set when spec.os.name
                                    is windows.
                                  items:
                                    description: Sysctl defines a kernel parameter
                                      to be set
                                    properties:
                                      name:
                                        description: Name of a property to set
                                        type: string
                                      value:
                                        description: Value of a property to set
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                windowsOptions:
                                  description: The Windows specific settings applied
                                    to all containers. If unspecified, the options
                                    within a container's SecurityContext will be used.
                                    If set in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name
                                    is linux.
                                  properties:
                                    gmsaCredentialSpec:
                                      description: GMSACredentialSpec is where the
                                        GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                        inlines the contents of the GMSA credential
                                        spec named by the GMSACredentialSpecName field.
                                      type: string
                                    gmsaCredentialSpecName:
                                      description: GMSACredentialSpecName is the name
                                        of the GMSA credential spec to use.
                                      type: string
                                    hostProcess:
                                      description: HostProcess determines if a container
                                        should be run as a 'Host Process' container.
                                        This field is alpha-level and will only be
                                        honored by components that enable the WindowsHostProcessContainers
                                        feature flag. Setting this field without the
                                        feature flag will result in errors when validating
                                        the Pod. All of a Pod's containers must have
                                        the same effective HostProcess value (it is
                                        not allowed to have a mix of HostProcess containers
                                        and non-HostProcess containers).  In addition,
                                        if HostProcess is true then HostNetwork must
                                        also be set to true.
                                      type: boolean
                                    runAsUserName:
                                      description: The UserName in Windows to run
                                        the entrypoint of the container process. Defaults
                                        to the user specified in image metadata if
                                        unspecified. May also be set in PodSecurityContext.
                                        If set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence.
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully. May be decreased in delete
                                request. Value must be non-negative integer. The value
                                zero indicates stop immediately via the kill signal
                                (no opportunity to shut down). If this value is nil,
                                the default grace period will be used instead. The
                                grace period is the duration in seconds after the
                                processes running in the pod are sent a termination
                                signal and the time when the processes are forcibly
                                halted with a kill signal. Set this value longer than
                                the expected cleanup time for your process. Defaults
                                to 30 seconds.
                              format: int64
                              type: integer
                            tolerations:
                              description: If specified, the pod's tolerations.
                              items:
                                description: The pod this Toleration is attached to
                                  tolerates any taint that matches the triple <key,value,effect>
                                  using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: Effect indicates the taint effect
                                      to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule,
                                      PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: Key is the taint key that the toleration
                                      applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists;
                                      this combination means to match all values and
                                      all keys.
                                    type: string
                                  operator:
                                    description: Operator represents a key's relationship
                                      to the value. Valid operators are Exists and
                                      Equal. Defaults to Equal. Exists is equivalent
                                      to wildcard for value, so that a pod can tolerate
                                      all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: TolerationSeconds represents the
                                      period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is
                                      ignored) tolerates the taint. By default, it
                                      is not set, which means tolerate the taint forever
                                      (do not evict). Zero and negative values will
                                      be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: Value is the taint value the toleration
                                      matches to. If the operator is Exists, the value
                                      should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                            upgradeStrategy:
                              description: 'Upgrade strategy for the components. By
                                default, it is the same as the workload''s default
                                strategy that the component is deployed with. Note:
                                the maxSurge will not take effect for the compute
                                component.'
                              properties:
                                inPlaceUpdateStrategy:
                                  description: InPlaceUpdateStrategy contains strategies
                                    for in-place update.
                                  properties:
                                    gracePeriodSeconds:
                                      description: GracePeriodSeconds is the timespan
                                        between set Pod status to not-ready and update
                                        images in Pod spec when in-place update a
                                        Pod.
                                      format: int32
                                      type: integer
                                  type: object
                                rollingUpdate:
                                  description: Rolling update config params. Present
                                    only if DeploymentStrategyType = RollingUpdate.
                                  properties:
                                    maxSurge:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 0
                                      description: 'The maximum number of pods that
                                        can be scheduled above the desired replicas
                                        during update or specified delete. Value can
                                        be an absolute number (ex: 5) or a percentage
                                        of desired pods (ex: 10%). Absolute number
                                        is calculated from percentage by rounding
                                        up. Defaults to 0.'
                                      x-kubernetes-int-or-string: true
                                    maxUnavailable:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 25%
                                      description: 'The maximum number of pods that
                                        can be unavailable during the update. Value
                                        can be an absolute number (ex: 5) or a percentage
                                        of desired pods (ex: 10%). Absolute number
                                        is calculated from percentage by rounding
                                        down. Defaults to 25%.'
                                      x-kubernetes-int-or-string: true
                                    partition:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 0
                                      description: 'Partition is the desired number
                                        of pods in old revisions. Value can be an
                                        absolute number (ex: 5) or a percentage of
                                        desired pods (ex: 10%). Absolute number is
                                        calculated from percentage by rounding up
                                        by default. It means when partition is set
                                        during pods updating, (replicas - partition
                                        value) number of pods will be updated. Default
                                        value is 0.'
                                      x-kubernetes-int-or-string: true
                                  type: object
                                type:
                                  default: RollingUpdate
                                  description: Type of upgrade. Can be "Recreate"
                                    or "RollingUpdate". Default is RollingUpdate.
                                  enum:
                                  - Recreate
                                  - RollingUpdate
                                  - InPlaceIfPossible
                                  - InPlaceOnly
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      ports:
                        description: Ports to be listened by compactor Pods.
                        properties:
                          metrics:
                            description: Metrics port of the component. It always
                              serves the metrics in Prometheus format.
                            format: int32
                            minimum: 1
                            type: integer
                          service:
                            description: Service port of the component. For each component,
                              the 'service' has different meanings. It's an optional
                              field and if it's left out, a default port (varies among
                              components) will be used.
                            format: int32
                            minimum: 1
                            type: integer
                        type: object
                      restartAt:
                        description: The time that the Pods of frontend that should
                          be restarted. Setting a value on this field will trigger
                          a recreation of all Pods of this component.
                        format: date-time
                        type: string
                    type: object
                  compute:
                    description: Compute component spec.
                    properties:
                      groups:
                        description: Groups of Pods of compute component.
                        items:
                          description: RisingWaveComputeGroup is the group for component
                            compute.
                          properties:
                            dnsConfig:
                              description: Specifies the DNS parameters of a pod.
                                Parameters specified here will be merged to the generated
                                DNS configuration based on DNSPolicy.
                              properties:
                                nameservers:
                                  description: A list of DNS name server IP addresses.
                                    This will be appended to the base nameservers
                                    generated from DNSPolicy. Duplicated nameservers
                                    will be removed.
                                  items:
                                    type: string
                                  type: array
                                options:
                                  description: A list of DNS resolver options. This
                                    will be merged with the base options generated
                                    from DNSPolicy. Duplicated entries will be removed.
                                    Resolution options given in Options will override
                                    those that appear in the base DNSPolicy.
                                  items:
                                    description: PodDNSConfigOption defines DNS resolver
                                      options of a pod.
                                    properties:
                                      name:
                                        description: Required.
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                searches:
                                  description: A list of DNS search domains for host-name
                                    lookup. This will be appended to the base search
                                    paths generated from DNSPolicy. Duplicated search
                                    paths will be removed.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            image:
                              description: Image for RisingWave component.
                              type: string
                            imagePullPolicy:
                              default: IfNotPresent
                              description: Pull policy of the RisingWave image. The
                                default value is the same as the default of Kubernetes.
                              enum:
                              - Always
                              - Never
                              - IfNotPresent
                              type: string
                            imagePullSecrets:
                              description: Secrets for pulling RisingWave images.
                              items:
                                type: string
                              type: array
                            metadata:
                              description: metadata of the RisingWave's Pods.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations of the object.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels of the object.
                                  type: object
                              type: object
                            name:
                              description: Name of the group.
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: A map of labels describing the nodes to
                                be scheduled on.
                              type: object
                            podTemplate:
                              description: Base template for Pods of RisingWave. By
                                default, there's no such template and the controller
                                will set all unrelated fields to the default value.
                              type: string
                            priorityClassName:
                              description: If specified, indicates the pod's priority.
                                "system-node-critical" and "system-cluster-critical"
                                are two special keywords which indicate the highest
                                priorities with the former being the highest priority.
                                Any other name must be defined by creating a PriorityClass
                                object with that name. If not specified, the pod priority
                                will be default or zero if there is no default.
                              type: string
                            replicas:
                              description: Replicas of Pods in this group.
                              format: int32
                              minimum: 0
                              type: integer
                            resources:
                              description: Resources of the RisingWave component.
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            securityContext:
                              description: 'SecurityContext holds pod-level security
                                attributes and common container settings. Optional:
                                Defaults to empty.  See type description for default
                                values of each field.'
                              properties:
                                fsGroup:
                                  description: "A special supplemental group that
                                    applies to all containers in a pod. Some volume
                                    types allow the Kubelet to change the ownership
                                    of that volume to be owned by the pod: \n 1. The
                                    owning GID will be the FSGroup 2. The setgid bit
                                    is set (new files created in the volume will be
                                    owned by FSGroup) 3. The permission bits are OR'd
                                    with rw-rw---- \n If unset, the Kubelet will not
                                    modify the ownership and permissions of any volume.
                                    Note that this field cannot be set when spec.os.name
                                    is windows."
                                  format: int64
                                  type: integer
                                fsGroupChangePolicy:
                                  description: 'fsGroupChangePolicy defines behavior
                                    of changing ownership and permission of the volume
                                    before being exposed inside Pod. This field will
                                    only apply to volume types which support fsGroup
                                    based ownership(and permissions). It will have
                                    no effect on ephemeral volume types such as: secret,
                                    configmaps and emptydir. Valid values are "OnRootMismatch"
                                    and "Always". If not specified, "Always" is used.
                                    Note that this field cannot be set when spec.os.name
                                    is windows.'
                                  type: string
                                runAsGroup:
                                  description: The GID to run the entrypoint of the
                                    container process. Uses runtime default if unset.
                                    May also be set in SecurityContext.  If set in
                                    both SecurityContext and PodSecurityContext, the
                                    value specified in SecurityContext takes precedence
                                    for that container. Note that this field cannot
                                    be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                runAsNonRoot:
                                  description: Indicates that the container must run
                                    as a non-root user. If true, the Kubelet will
                                    validate the image at runtime to ensure that it
                                    does not run as UID 0 (root) and fail to start
                                    the container if it does. If unset or false, no
                                    such validation will be performed. May also be
                                    set in SecurityContext.  If set in both SecurityContext
                                    and PodSecurityContext, the value specified in
                                    SecurityContext takes precedence.
                                  type: boolean
                                runAsUser:
                                  description: The UID to run the entrypoint of the
                                    container process. Defaults to user specified
                                    in image metadata if unspecified. May also be
                                    set in SecurityContext.  If set in both SecurityContext
                                    and PodSecurityContext, the value specified in
                                    SecurityContext takes precedence for that container.
                                    Note that this field cannot be set when spec.os.name
                                    is windows.
                                  format: int64
                                  type: integer
                                seLinuxOptions:
                                  description: The SELinux context to be applied to
                                    all containers. If unspecified, the container
                                    runtime will allocate a random SELinux context
                                    for each container.  May also be set in SecurityContext.  If
                                    set in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence
                                    for that container. Note that this field cannot
                                    be set when spec.os.name is windows.
                                  properties:
                                    level:
                                      description: Level is SELinux level label that
                                        applies to the container.
                                      type: string
                                    role:
                                      description: Role is a SELinux role label that
                                        applies to the container.
                                      type: string
                                    type:
                                      description: Type is a SELinux type label that
                                        applies to the container.
                                      type: string
                                    user:
                                      description: User is a SELinux user label that
                                        applies to the container.
                                      type: string
                                  type: object
                                seccompProfile:
                                  description: The seccomp options to use by the containers
                                    in this pod. Note that this field cannot be set
                                    when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: localhostProfile indicates a profile
                                        defined in a file on the node should be used.
                                        The profile must be preconfigured on the node
                                        to work. Must be a descending path, relative
                                        to the kubelet's configured seccomp profile
                                        location. Must only be set if type is "Localhost".
                                      type: string
                                    type:
                                      description: "type indicates which kind of seccomp
                                        profile will be applied. Valid options are:
                                        \n Localhost - a profile defined in a file
                                        on the node should be used. RuntimeDefault
                                        - the container runtime default profile should
                                        be used. Unconfined - no profile should be
                                        applied."
                                      type: string
                                  required:
                                  - type
                                  type: object
                                supplementalGroups:
                                  description: A list of groups applied to the first
                                    process run in each container, in addition to
                                    the container's primary GID.  If unspecified,
                                    no groups will be added to any container. Note
                                    that this field cannot be set when spec.os.name
                                    is windows.
                                  items:
                                    format: int64
                                    type: integer
                                  type: array
                                sysctls:
                                  description: Sysctls hold a list of namespaced sysctls
                                    used for the pod. Pods with unsupported sysctls
                                    (by the container runtime) might fail to launch.
                                    Note that this field cannot be set when spec.os.name
                                    is windows.
                                  items:
                                    description: Sysctl defines a kernel parameter
                                      to be set
                                    properties:
                                      name:
                                        description: Name of a property to set
                                        type: string
                                      value:
                                        description: Value of a property to set
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                windowsOptions:
                                  description: The Windows specific settings applied
                                    to all containers. If unspecified, the options
                                    within a container's SecurityContext will be used.
                                    If set in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name
                                    is linux.
                                  properties:
                                    gmsaCredentialSpec:
                                      description: GMSACredentialSpec is where the
                                        GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                        inlines the contents of the GMSA credential
                                        spec named by the GMSACredentialSpecName field.
                                      type: string
                                    gmsaCredentialSpecName:
                                      description: GMSACredentialSpecName is the name
                                        of the GMSA credential spec to use.
                                      type: string
                                    hostProcess:
                                      description: HostProcess determines if a container
                                        should be run as a 'Host Process' container.
                                        This field is alpha-level and will only be
                                        honored by components that enable the WindowsHostProcessContainers
                                        feature flag. Setting this field without the
                                        feature flag will result in errors when validating
                                        the Pod. All of a Pod's containers must have
                                        the same effective HostProcess value (it is
                                        not allowed to have a mix of HostProcess containers
                                        and non-HostProcess containers).  In addition,
                                        if HostProcess is true then HostNetwork must
                                        also be set to true.
                                      type: boolean
                                    runAsUserName:
                                      description: The UserName in Windows to run
                                        the entrypoint of the container process. Defaults
                                        to the user specified in image metadata if
                                        unspecified. May also be set in PodSecurityContext.
                                        If set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence.
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully. May be decreased in delete
                                request. Value must be non-negative integer. The value
                                zero indicates stop immediately via the kill signal
                                (no opportunity to shut down). If this value is nil,
                                the default grace period will be used instead. The
                                grace period is the duration in seconds after the
                                processes running in the pod are sent a termination
                                signal and the time when the processes are forcibly
                                halted with a kill signal. Set this value longer than
                                the expected cleanup time for your process. Defaults
                                to 30 seconds.
                              format: int64
                              type: integer
                            tolerations:
                              description: If specified, the pod's tolerations.
                              items:
                                description: The pod this Toleration is attached to
                                  tolerates any taint that matches the triple <key,value,effect>
                                  using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: Effect indicates the taint effect
                                      to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule,
                                      PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: Key is the taint key that the toleration
                                      applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists;
                                      this combination means to match all values and
                                      all keys.
                                    type: string
                                  operator:
                                    description: Operator represents a key's relationship
                                      to the value. Valid operators are Exists and
                                      Equal. Defaults to Equal. Exists is equivalent
                                      to wildcard for value, so that a pod can tolerate
                                      all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: TolerationSeconds represents the
                                      period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is
                                      ignored) tolerates the taint. By default, it
                                      is not set, which means tolerate the taint forever
                                      (do not evict). Zero and negative values will
                                      be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: Value is the taint value the toleration
                                      matches to. If the operator is Exists, the value
                                      should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                            upgradeStrategy:
                              description: 'Upgrade strategy for the components. By
                                default, it is the same as the workload''s default
                                strategy that the component is deployed with. Note:
                                the maxSurge will not take effect for the compute
                                component.'
                              properties:
                                inPlaceUpdateStrategy:
                                  description: InPlaceUpdateStrategy contains strategies
                                    for in-place update.
                                  properties:
                                    gracePeriodSeconds:
                                      description: GracePeriodSeconds is the timespan
                                        between set Pod status to not-ready and update
                                        images in Pod spec when in-place update a
                                        Pod.
                                      format: int32
                                      type: integer
                                  type: object
                                rollingUpdate:
                                  description: Rolling update config params. Present
                                    only if DeploymentStrategyType = RollingUpdate.
                                  properties:
                                    maxSurge:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 0
                                      description: 'The maximum number of pods that
                                        can be scheduled above the desired replicas
                                        during update or specified delete. Value can
                                        be an absolute number (ex: 5) or a percentage
                                        of desired pods (ex: 10%). Absolute number
                                        is calculated from percentage by rounding
                                        up. Defaults to 0.'
                                      x-kubernetes-int-or-string: true
                                    maxUnavailable:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 25%
                                      description: 'The maximum number of pods that
                                        can be unavailable during the update. Value
                                        can be an absolute number (ex: 5) or a percentage
                                        of desired pods (ex: 10%). Absolute number
                                        is calculated from percentage by rounding
                                        down. Defaults to 25%.'
                                      x-kubernetes-int-or-string: true
                                    partition:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 0
                                      description: 'Partition is the desired number
                                        of pods in old revisions. Value can be an
                                        absolute number (ex: 5) or a percentage of
                                        desired pods (ex: 10%). Absolute number is
                                        calculated from percentage by rounding up
                                        by default. It means when partition is set
                                        during pods updating, (replicas - partition
                                        value) number of pods will be updated. Default
                                        value is 0.'
                                      x-kubernetes-int-or-string: true
                                  type: object
                                type:
                                  default: RollingUpdate
                                  description: Type of upgrade. Can be "Recreate"
                                    or "RollingUpdate". Default is RollingUpdate.
                                  enum:
                                  - Recreate
                                  - RollingUpdate
                                  - InPlaceIfPossible
                                  - InPlaceOnly
                                  type: string
                              type: object
                            volumeMounts:
                              description: Volumes to be mounted on the Pods.
                              items:
                                description: VolumeMount describes a mounting of a
                                  Volume within a container.
                                properties:
                                  mountPath:
                                    description: Path within the container at which
                                      the volume should be mounted.  Must not contain
                                      ':'.
                                    type: string
                                  mountPropagation:
                                    description: mountPropagation determines how mounts
                                      are propagated from the host to container and
                                      the other way around. When not set, MountPropagationNone
                                      is used. This field is beta in 1.10.
                                    type: string
                                  name:
                                    description: This must match the Name of a Volume.
                                    type: string
                                  readOnly:
                                    description: Mounted read-only if true, read-write
                                      otherwise (false or unspecified). Defaults to
                                      false.
                                    type: boolean
                                  subPath:
                                    description: Path within the volume from which
                                      the container's volume should be mounted. Defaults
                                      to "" (volume's root).
                                    type: string
                                  subPathExpr:
                                    description: Expanded path within the volume from
                                      which the container's volume should be mounted.
                                      Behaves similarly to SubPath but environment
                                      variable references $(VAR_NAME) are expanded
                                      using the container's environment. Defaults
                                      to "" (volume's root). SubPathExpr and SubPath
                                      are mutually exclusive.
                                    type: string
                                required:
                                - mountPath
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      ports:
                        description: Ports to be listened by compute Pods.
                        properties:
                          metrics:
                            description: Metrics port of the component. It always
                              serves the metrics in Prometheus format.
                            format: int32
                            minimum: 1
                            type: integer
                          service:
                            description: Service port of the component. For each component,
                              the 'service' has different meanings. It's an optional
                              field and if it's left out, a default port (varies among
                              components) will be used.
                            format: int32
                            minimum: 1
                            type: integer
                        type: object
                      restartAt:
                        description: The time that the Pods of frontend that should
                          be restarted. Setting a value on this field will trigger
                          a recreation of all Pods of this component.
                        format: date-time
                        type: string
                    type: object
                  frontend:
                    description: Frontend component spec.
                    properties:
                      groups:
                        description: Groups of Pods of frontend component.
                        items:
                          description: RisingWaveComponentGroup is the common deployment
                            group of each component. Currently, we use this group
                            for meta/frontend/compactor.
                          properties:
                            dnsConfig:
                              description: Specifies the DNS parameters of a pod.
                                Parameters specified here will be merged to the generated
                                DNS configuration based on DNSPolicy.
                              properties:
                                nameservers:
                                  description: A list of DNS name server IP addresses.
                                    This will be appended to the base nameservers
                                    generated from DNSPolicy. Duplicated nameservers
                                    will be removed.
                                  items:
                                    type: string
                                  type: array
                                options:
                                  description: A list of DNS resolver options. This
                                    will be merged with the base options generated
                                    from DNSPolicy. Duplicated entries will be removed.
                                    Resolution options given in Options will override
                                    those that appear in the base DNSPolicy.
                                  items:
                                    description: PodDNSConfigOption defines DNS resolver
                                      options of a pod.
                                    properties:
                                      name:
                                        description: Required.
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                searches:
                                  description: A list of DNS search domains for host-name
                                    lookup. This will be appended to the base search
                                    paths generated from DNSPolicy. Duplicated search
                                    paths will be removed.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            image:
                              description: Image for RisingWave component.
                              type: string
                            imagePullPolicy:
                              default: IfNotPresent
                              description: Pull policy of the RisingWave image. The
                                default value is the same as the default of Kubernetes.
                              enum:
                              - Always
                              - Never
                              - IfNotPresent
                              type: string
                            imagePullSecrets:
                              description: Secrets for pulling RisingWave images.
                              items:
                                type: string
                              type: array
                            metadata:
                              description: metadata of the RisingWave's Pods.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations of the object.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels of the object.
                                  type: object
                              type: object
                            name:
                              description: Name of the group.
                              minLength: 1
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: A map of labels describing the nodes to
                                be scheduled on.
                              type: object
                            podTemplate:
                              description: Base template for Pods of RisingWave. By
                                default, there's no such template and the controller
                                will set all unrelated fields to the default value.
                              type: string
                            priorityClassName:
                              description: If specified, indicates the pod's priority.
                                "system-node-critical" and "system-cluster-critical"
                                are two special keywords which indicate the highest
                                priorities with the former being the highest priority.
                                Any other name must be defined by creating a PriorityClass
                                object with that name. If not specified, the pod priority
                                will be default or zero if there is no default.
                              type: string
                            replicas:
                              description: Replicas of Pods in this group.
                              format: int32
                              minimum: 0
                              type: integer
                            resources:
                              description: Resources of the RisingWave component.
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            securityContext:
                              description: 'SecurityContext holds pod-level security
                                attributes and common container settings. Optional:
                                Defaults to empty.  See type description for default
                                values of each field.'
                              properties:
                                fsGroup:
                                  description: "A special supplemental group that
                                    applies to all containers in a pod. Some volume
                                    types allow the Kubelet to change the ownership
                                    of that volume to be owned by the pod: \n 1. The
                                    owning GID will be the FSGroup 2. The setgid bit
                                    is set (new files created in the volume will be
                                    owned by FSGroup) 3. The permission bits are OR'd
                                    with rw-rw---- \n If unset, the Kubelet will not
                                    modify the ownership and permissions of any volume.
                                    Note that this field cannot be set when spec.os.name
                                    is windows."
                                  format: int64
                                  type: integer
                                fsGroupChangePolicy:
                                  description: 'fsGroupChangePolicy defines behavior
                                    of changing ownership and permission of the volume
                                    before being exposed inside Pod. This field will
                                    only apply to volume types which support fsGroup
                                    based ownership(and permissions). It will have
                                    no effect on ephemeral volume types such as: secret,
                                    configmaps and emptydir. Valid values are "OnRootMismatch"
                                    and "Always". If not specified, "Always" is used.
                                    Note that this field cannot be set when spec.os.name
                                    is windows.'
                                  type: string
                                runAsGroup:
                                  description: The GID to run the entrypoint of the
                                    container process. Uses runtime default if unset.
                                    May also be set in SecurityContext.  If set in
                                    both SecurityContext and PodSecurityContext, the
                                    value specified in SecurityContext takes precedence
                                    for that container. Note that this field cannot
                                    be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                runAsNonRoot:
                                  description: Indicates that the container must run
                                    as a non-root user. If true, the Kubelet will
                                    validate the image at runtime to ensure that it
                                    does not run as UID 0 (root) and fail to start
                                    the container if it does. If unset or false, no
                                    such validation will be performed. May also be
                                    set in SecurityContext.  If set in both SecurityContext
                                    and PodSecurityContext, the value specified in
                                    SecurityContext takes precedence.
                                  type: boolean
                                runAsUser:
                                  description: The UID to run the entrypoint of the
                                    container process. Defaults to user specified
                                    in image metadata if unspecified. May also be
                                    set in SecurityContext.  If set in both SecurityContext
                                    and PodSecurityContext, the value specified in
                                    SecurityContext takes precedence for that container.
                                    Note that this field cannot be set when spec.os.name
                                    is windows.
                                  format: int64
                                  type: integer
                                seLinuxOptions:
                                  description: The SELinux context to be applied to
                                    all containers. If unspecified, the container
                                    runtime will allocate a random SELinux context
                                    for each container.  May also be set in SecurityContext.  If
                                    set in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence
                                    for that container. Note that this field cannot
                                    be set when spec.os.name is windows.
                                  properties:
                                    level:
                                      description: Level is SELinux level label that
                                        applies to the container.
                                      type: string
                                    role:
                                      description: Role is a SELinux role label that
                                        applies to the container.
                                      type: string
                                    type:
                                      description: Type is a SELinux type label that
                                        applies to the container.
                                      type: string
                                    user:
                                      description: User is a SELinux user label that
                                        applies to the container.
                                      type: string
                                  type: object
                                seccompProfile:
                                  description: The seccomp options to use by the containers
                                    in this pod. Note that this field cannot be set
                                    when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: localhostProfile indicates a profile
                                        defined in a file on the node should be used.
                                        The profile must be preconfigured on the node
                                        to work. Must be a descending path, relative
                                        to the kubelet's configured seccomp profile
                                        location. Must only be set if type is "Localhost".
                                      type: string
                                    type:
                                      description: "type indicates which kind of seccomp
                                        profile will be applied. Valid options are:
                                        \n Localhost - a profile defined in a file
                                        on the node should be used. RuntimeDefault
                                        - the container runtime default profile should
                                        be used. Unconfined - no profile should be
                                        applied."
                                      type: string
                                  required:
                                  - type
                                  type: object
                                supplementalGroups:
                                  description: A list of groups applied to the first
                                    process run in each container, in addition to
                                    the container's primary GID.  If unspecified,
                                    no groups will be added to any container. Note
                                    that this field cannot be set when spec.os.name
                                    is windows.
                                  items:
                                    format: int64
                                    type: integer
                                  type: array
                                sysctls:
                                  description: Sysctls hold a list of namespaced sysctls
                                    used for the pod. Pods with unsupported sysctls
                                    (by the container runtime) might fail to launch.
                                    Note that this field cannot be set when spec.os.name
                                    is windows.
                                  items:
                                    description: Sysctl defines a kernel parameter
                                      to be set
                                    properties:
                                      name:
                                        description: Name of a property to set
                                        type: string
                                      value:
                                        description: Value of a property to set
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                windowsOptions:
                                  description: The Windows specific settings applied
                                    to all containers. If unspecified, the options
                                    within a container's SecurityContext will be used.
                                    If set in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name
                                    is linux.
                                  properties:
                                    gmsaCredentialSpec:
                                      description: GMSACredentialSpec is where the
                                        GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                        inlines the contents of the GMSA credential
                                        spec named by the GMSACredentialSpecName field.
                                      type: string
                                    gmsaCredentialSpecName:
                                      description: GMSACredentialSpecName is the name
                                        of the GMSA credential spec to use.
                                      type: string
                                    hostProcess:
                                      description: HostProcess determines if a container
                                        should be run as a 'Host Process' container.
                                        This field is alpha-level and will only be
                                        honored by components that enable the WindowsHostProcessContainers
                                        feature flag. Setting this field without the
                                        feature flag will result in errors when validating
                                        the Pod. All of a Pod's containers must have
                                        the same effective HostProcess value (it is
                                        not allowed to have a mix of HostProcess containers
                                        and non-HostProcess containers).  In addition,
                                        if HostProcess is true then HostNetwork must
                                        also be set to true.
                                      type: boolean
                                    runAsUserName:
                                      description: The UserName in Windows to run
                                        the entrypoint of the container process. Defaults
                                        to the user specified in image metadata if
                                        unspecified. May also be set in PodSecurityContext.
                                        If set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence.
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully. May be decreased in delete
                                request. Value must be non-negative integer. The value
                                zero indicates stop immediately via the kill signal
                                (no opportunity to shut down). If this value is nil,
                                the default grace period will be used instead. The
                                grace period is the duration in seconds after the
                                processes running in the pod are sent a termination
                                signal and the time when the processes are forcibly
                                halted with a kill signal. Set this value longer than
                                the expected cleanup time for your process. Defaults
                                to 30 seconds.
                              format: int64
                              type: integer
                            tolerations:
                              description: If specified, the pod's tolerations.
                              items:
                                description: The pod this Toleration is attached to
                                  tolerates any taint that matches the triple <key,value,effect>
                                  using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: Effect indicates the taint effect
                                      to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule,
                                      PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: Key is the taint key that the toleration
                                      applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists;
                                      this combination means to match all values and
                                      all keys.
                                    type: string
                                  operator:
                                    description: Operator represents a key's relationship
                                      to the value. Valid operators are Exists and
                                      Equal. Defaults to Equal. Exists is equivalent
                                      to wildcard for value, so that a pod can tolerate
                                      all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: TolerationSeconds represents the
                                      period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is
                                      ignored) tolerates the taint. By default, it
                                      is not set, which means tolerate the taint forever
                                      (do not evict). Zero and negative values will
                                      be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: Value is the taint value the toleration
                                      matches to. If the operator is Exists, the value
                                      should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                            upgradeStrategy:
                              description: 'Upgrade strategy for the components. By
                                default, it is the same as the workload''s default
                                strategy that the component is deployed with. Note:
                                the maxSurge will not take effect for the compute
                                component.'
                              properties:
                                inPlaceUpdateStrategy:
                                  description: InPlaceUpdateStrategy contains strategies
                                    for in-place update.
                                  properties:
                                    gracePeriodSeconds:
                                      description: GracePeriodSeconds is the timespan
                                        between set Pod status to not-ready and update
                                        images in Pod spec when in-place update a
                                        Pod.
                                      format: int32
                                      type: integer
                                  type: object
                                rollingUpdate:
                                  description: Rolling update config params. Present
                                    only if DeploymentStrategyType = RollingUpdate.
                                  properties:
                                    maxSurge:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 0
                                      description: 'The maximum number of pods that
                                        can be scheduled above the desired replicas
                                        during update or specified delete. Value can
                                        be an absolute number (ex: 5) or a percentage
                                        of desired pods (ex: 10%). Absolute number
                                        is calculated from percentage by rounding
                                        up. Defaults to 0.'
                                      x-kubernetes-int-or-string: true
                                    maxUnavailable:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 25%
                                      description: 'The maximum number of pods that
                                        can be unavailable during the update. Value
                                        can be an absolute number (ex: 5) or a percentage
                                        of desired pods (ex: 10%). Absolute number
                                        is calculated from percentage by rounding
                                        down. Defaults to 25%.'
                                      x-kubernetes-int-or-string: true
                                    partition:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 0
                                      description: 'Partition is the desired number
                                        of pods in old revisions. Value can be an
                                        absolute number (ex: 5) or a percentage of
                                        desired pods (ex: 10%). Absolute number is
                                        calculated from percentage by rounding up
                                        by default. It means when partition is set
                                        during pods updating, (replicas - partition
                                        value) number of pods will be updated. Default
                                        value is 0.'
                                      x-kubernetes-int-or-string: true
                                  type: object
                                type:
                                  default: RollingUpdate
                                  description: Type of upgrade. Can be "Recreate"
                                    or "RollingUpdate". Default is RollingUpdate.
                                  enum:
                                  - Recreate
                                  - RollingUpdate
                                  - InPlaceIfPossible
                                  - InPlaceOnly
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      ports:
                        description: Ports to be listened by the frontend Pods.
                        properties:
                          metrics:
                            description: Metrics port of the component. It always
                              serves the metrics in Prometheus format.
                            format: int32
                            minimum: 1
                            type: integer
                          service:
                            description: Service port of the component. For each component,
                              the 'service' has different meanings. It's an optional
                              field and if it's left out, a default port (varies among
                              components) will be used.
                            format: int32
                            minimum: 1
                            type: integer
                        type: object
                      restartAt:
                        description: The time that the Pods of frontend that should
                          be restarted. Setting a value on this field will trigger
                          a recreation of all Pods of this component.
                        format: date-time
                        type: string
                    type: object
                  meta:
                    description: Meta component spec.
                    properties:
                      groups:
                        description: Groups of Pods of meta component.
                        items:
                          description: RisingWaveComponentGroup is the common deployment
                            group of each component. Currently, we use this group
                            for meta/frontend/compactor.
                          properties:
                            dnsConfig:
                              description: Specifies the DNS parameters of a pod.
                                Parameters specified here will be merged to the generated
                                DNS configuration based on DNSPolicy.
                              properties:
                                nameservers:
                                  description: A list of DNS name server IP addresses.
                                    This will be appended to the base nameservers
                                    generated from DNSPolicy. Duplicated nameservers
                                    will be removed.
                                  items:
                                    type: string
                                  type: array
                                options:
                                  description: A list of DNS resolver options. This
                                    will be merged with the base options generated
                                    from DNSPolicy. Duplicated entries will be removed.
                                    Resolution options given in Options will override
                                    those that appear in the base DNSPolicy.
                                  items:
                                    description: PodDNSConfigOption defines DNS resolver
                                      options of a pod.
                                    properties:
                                      name:
                                        description: Required.
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                searches:
                                  description: A list of DNS search domains for host-name
                                    lookup. This will be appended to the base search
                                    paths generated from DNSPolicy. Duplicated search
                                    paths will be removed.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            image:
                              description: Image for RisingWave component.
                              type: string
                            imagePullPolicy:
                              default: IfNotPresent
                              description: Pull policy of the RisingWave image. The
                                default value is the same as the default of Kubernetes.
                              enum:
                              - Always
                              - Never
                              - IfNotPresent
                              type: string
                            imagePullSecrets:
                              description: Secrets for pulling RisingWave images.
                              items:
                                type: string
                              type: array
                            metadata:
                              description: metadata of the RisingWave's Pods.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations of the object.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels of the object.
                                  type: object
                              type: object
                            name:
                              description: Name of the group.
                              minLength: 1
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: A map of labels describing the nodes to
                                be scheduled on.
                              type: object
                            podTemplate:
                              description: Base template for Pods of RisingWave. By
                                default, there's no such template and the controller
                                will set all unrelated fields to the default value.
                              type: string
                            priorityClassName:
                              description: If specified, indicates the pod's priority.
                                "system-node-critical" and "system-cluster-critical"
                                are two special keywords which indicate the highest
                                priorities with the former being the highest priority.
                                Any other name must be defined by creating a PriorityClass
                                object with that name. If not specified, the pod priority
                                will be default or zero if there is no default.
                              type: string
                            replicas:
                              description: Replicas of Pods in this group.
                              format: int32
                              minimum: 0
                              type: integer
                            resources:
                              description: Resources of the RisingWave component.
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            securityContext:
                              description: 'SecurityContext holds pod-level security
                                attributes and common container settings. Optional:
                                Defaults to empty.  See type description for default
                                values of each field.'
                              properties:
                                fsGroup:
                                  description: "A special supplemental group that
                                    applies to all containers in a pod. Some volume
                                    types allow the Kubelet to change the ownership
                                    of that volume to be owned by the pod: \n 1. The
                                    owning GID will be the FSGroup 2. The setgid bit
                                    is set (new files created in the volume will be
                                    owned by FSGroup) 3. The permission bits are OR'd
                                    with rw-rw---- \n If unset, the Kubelet will not
                                    modify the ownership and permissions of any volume.
                                    Note that this field cannot be set when spec.os.name
                                    is windows."
                                  format: int64
                                  type: integer
                                fsGroupChangePolicy:
                                  description: 'fsGroupChangePolicy defines behavior
                                    of changing ownership and permission of the volume
                                    before being exposed inside Pod. This field will
                                    only apply to volume types which support fsGroup
                                    based ownership(and permissions). It will have
                                    no effect on ephemeral volume types such as: secret,
                                    configmaps and emptydir. Valid values are "OnRootMismatch"
                                    and "Always". If not specified, "Always" is used.
                                    Note that this field cannot be set when spec.os.name
                                    is windows.'
                                  type: string
                                runAsGroup:
                                  description: The GID to run the entrypoint of the
                                    container process. Uses runtime default if unset.
                                    May also be set in SecurityContext.  If set in
                                    both SecurityContext and PodSecurityContext, the
                                    value specified in SecurityContext takes precedence
                                    for that container. Note that this field cannot
                                    be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                runAsNonRoot:
                                  description: Indicates that the container must run
                                    as a non-root user. If true, the Kubelet will
                                    validate the image at runtime to ensure that it
                                    does not run as UID 0 (root) and fail to start
                                    the container if it does. If unset or false, no
                                    such validation will be performed. May also be
                                    set in SecurityContext.  If set in both SecurityContext
                                    and PodSecurityContext, the value specified in
                                    SecurityContext takes precedence.
                                  type: boolean
                                runAsUser:
                                  description: The UID to run the entrypoint of the
                                    container process. Defaults to user specified
                                    in image metadata if unspecified. May also be
                                    set in SecurityContext.  If set in both SecurityContext
                                    and PodSecurityContext, the value specified in
                                    SecurityContext takes precedence for that container.
                                    Note that this field cannot be set when spec.os.name
                                    is windows.
                                  format: int64
                                  type: integer
                                seLinuxOptions:
                                  description: The SELinux context to be applied to
                                    all containers. If unspecified, the container
                                    runtime will allocate a random SELinux context
                                    for each container.  May also be set in SecurityContext.  If
                                    set in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence
                                    for that container. Note that this field cannot
                                    be set when spec.os.name is windows.
                                  properties:
                                    level:
                                      description: Level is SELinux level label that
                                        applies to the container.
                                      type: string
                                    role:
                                      description: Role is a SELinux role label that
                                        applies to the container.
                                      type: string
                                    type:
                                      description: Type is a SELinux type label that
                                        applies to the container.
                                      type: string
                                    user:
                                      description: User is a SELinux user label that
                                        applies to the container.
                                      type: string
                                  type: object
                                seccompProfile:
                                  description: The seccomp options to use by the containers
                                    in this pod. Note that this field cannot be set
                                    when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: localhostProfile indicates a profile
                                        defined in a file on the node should be used.
                                        The profile must be preconfigured on the node
                                        to work. Must be a descending path, relative
                                        to the kubelet's configured seccomp profile
                                        location. Must only be set if type is "Localhost".
                                      type: string
                                    type:
                                      description: "type indicates which kind of seccomp
                                        profile will be applied. Valid options are:
                                        \n Localhost - a profile defined in a file
                                        on the node should be used. RuntimeDefault
                                        - the container runtime default profile should
                                        be used. Unconfined - no profile should be
                                        applied."
                                      type: string
                                  required:
                                  - type
                                  type: object
                                supplementalGroups:
                                  description: A list of groups applied to the first
                                    process run in each container, in addition to
                                    the container's primary GID.  If unspecified,
                                    no groups will be added to any container. Note
                                    that this field cannot be set when spec.os.name
                                    is windows.
                                  items:
                                    format: int64
                                    type: integer
                                  type: array
                                sysctls:
                                  description: Sysctls hold a list of namespaced sysctls
                                    used for the pod. Pods with unsupported sysctls
                                    (by the container runtime) might fail to launch.
                                    Note that this field cannot be set when spec.os.name
                                    is windows.
                                  items:
                                    description: Sysctl defines a kernel parameter
                                      to be set
                                    properties:
                                      name:
                                        description: Name of a property to set
                                        type: string
                                      value:
                                        description: Value of a property to set
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                windowsOptions:
                                  description: The Windows specific settings applied
                                    to all containers. If unspecified, the options
                                    within a container's SecurityContext will be used.
                                    If set in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name
                                    is linux.
                                  properties:
                                    gmsaCredentialSpec:
                                      description: GMSACredentialSpec is where the
                                        GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                        inlines the contents of the GMSA credential
                                        spec named by the GMSACredentialSpecName field.
                                      type: string
                                    gmsaCredentialSpecName:
                                      description: GMSACredentialSpecName is the name
                                        of the GMSA credential spec to use.
                                      type: string
                                    hostProcess:
                                      description: HostProcess determines if a container
                                        should be run as a 'Host Process' container.
                                        This field is alpha-level and will only be
                                        honored by components that enable the WindowsHostProcessContainers
                                        feature flag. Setting this field without the
                                        feature flag will result in errors when validating
                                        the Pod. All of a Pod's containers must have
                                        the same effective HostProcess value (it is
                                        not allowed to have a mix of HostProcess containers
                                        and non-HostProcess containers).  In addition,
                                        if HostProcess is true then HostNetwork must
                                        also be set to true.
                                      type: boolean
                                    runAsUserName:
                                      description: The UserName in Windows to run
                                        the entrypoint of the container process. Defaults
                                        to the user specified in image metadata if
                                        unspecified. May also be set in PodSecurityContext.
                                        If set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence.
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully. May be decreased in delete
                                request. Value must be non-negative integer. The value
                                zero indicates stop immediately via the kill signal
                                (no opportunity to shut down). If this value is nil,
                                the default grace period will be used instead. The
                                grace period is the duration in seconds after the
                                processes running in the pod are sent a termination
                                signal and the time when the processes are forcibly
                                halted with a kill signal. Set this value longer than
                                the expected cleanup time for your process. Defaults
                                to 30 seconds.
                              format: int64
                              type: integer
                            tolerations:
                              description: If specified, the pod's tolerations.
                              items:
                                description: The pod this Toleration is attached to
                                  tolerates any taint that matches the triple <key,value,effect>
                                  using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: Effect indicates the taint effect
                                      to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule,
                                      PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: Key is the taint key that the toleration
                                      applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists;
                                      this combination means to match all values and
                                      all keys.
                                    type: string
                                  operator:
                                    description: Operator represents a key's relationship
                                      to the value. Valid operators are Exists and
                                      Equal. Defaults to Equal. Exists is equivalent
                                      to wildcard for value, so that a pod can tolerate
                                      all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: TolerationSeconds represents the
                                      period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is
                                      ignored) tolerates the taint. By default, it
                                      is not set, which means tolerate the taint forever
                                      (do not evict). Zero and negative values will
                                      be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: Value is the taint value the toleration
                                      matches to. If the operator is Exists, the value
                                      should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                            upgradeStrategy:
                              description: 'Upgrade strategy for the components. By
                                default, it is the same as the workload''s default
                                strategy that the component is deployed with. Note:
                                the maxSurge will not take effect for the compute
                                component.'
                              properties:
                                inPlaceUpdateStrategy:
                                  description: InPlaceUpdateStrategy contains strategies
                                    for in-place update.
                                  properties:
                                    gracePeriodSeconds:
                                      description: GracePeriodSeconds is the timespan
                                        between set Pod status to not-ready and update
                                        images in Pod spec when in-place update a
                                        Pod.
                                      format: int32
                                      type: integer
                                  type: object
                                rollingUpdate:
                                  description: Rolling update config params. Present
                                    only if DeploymentStrategyType = RollingUpdate.
                                  properties:
                                    maxSurge:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 0
                                      description: 'The maximum number of pods that
                                        can be scheduled above the desired replicas
                                        during update or specified delete. Value can
                                        be an absolute number (ex: 5) or a percentage
                                        of desired pods (ex: 10%). Absolute number
                                        is calculated from percentage by rounding
                                        up. Defaults to 0.'
                                      x-kubernetes-int-or-string: true
                                    maxUnavailable:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 25%
                                      description: 'The maximum number of pods that
                                        can be unavailable during the update. Value
                                        can be an absolute number (ex: 5) or a percentage
                                        of desired pods (ex: 10%). Absolute number
                                        is calculated from percentage by rounding
                                        down. Defaults to 25%.'
                                      x-kubernetes-int-or-string: true
                                    partition:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 0
                                      description: 'Partition is the desired number
                                        of pods in old revisions. Value can be an
                                        absolute number (ex: 5) or a percentage of
                                        desired pods (ex: 10%). Absolute number is
                                        calculated from percentage by rounding up
                                        by default. It means when partition is set
                                        during pods updating, (replicas - partition
                                        value) number of pods will be updated. Default
                                        value is 0.'
                                      x-kubernetes-int-or-string: true
                                  type: object
                                type:
                                  default: RollingUpdate
                                  description: Type of upgrade. Can be "Recreate"
                                    or "RollingUpdate". Default is RollingUpdate.
                                  enum:
                                  - Recreate
                                  - RollingUpdate
                                  - InPlaceIfPossible
                                  - InPlaceOnly
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      ports:
                        description: Ports to be listened by the meta Pods.
                        properties:
                          dashboard:
                            description: Dashboard port of the meta, a default value
                              of 8080 will be used if not specified.
                            format: int32
                            minimum: 1
                            type: integer
                          metrics:
                            description: Metrics port of the component. It always
                              serves the metrics in Prometheus format.
                            format: int32
                            minimum: 1
                            type: integer
                          service:
                            description: Service port of the component. For each component,
                              the 'service' has different meanings. It's an optional
                              field and if it's left out, a default port (varies among
                              components) will be used.
                            format: int32
                            minimum: 1
                            type: integer
                        type: object
                      restartAt:
                        description: The time that the Pods of frontend that should
                          be restarted. Setting a value on this field will trigger
                          a recreation of all Pods of this component.
                        format: date-time
                        type: string
                    type: object
                type: object
              configuration:
                description: The spec of configuration template for RisingWave.
                properties:
                  configmap:
                    description: The reference to a key in a config map that contains
                      the base config for RisingWave. It's an optional field and can
                      be left out. If not specified, a default config is going to
                      be used.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the ConfigMap or its key must
                          be defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              enableDefaultServiceMonitor:
                description: Flag to indicate if a default ServiceMonitor (from Prometheus
                  operator) should be created by the controller. False and an empty
                  value means the ServiceMonitor won't be created automatically. But
                  even if it's set to true, the controller will determine if it can
                  create the resource by checking if the CRDs are installed.
                type: boolean
              enableOpenKruise:
                default: false
                description: Flag to indicate if OpenKruise should be enabled for
                  components. If enabled, CloneSets will be used for meta/frontend/compactor
                  nodes and Advanced StateFulSets will be used for compute nodes.
                type: boolean
              global:
                description: The spec of a shared template for components and a global
                  scope of replicas.
                properties:
                  dnsConfig:
                    description: Specifies the DNS parameters of a pod. Parameters
                      specified here will be merged to the generated DNS configuration
                      based on DNSPolicy.
                    properties:
                      nameservers:
                        description: A list of DNS name server IP addresses. This
                          will be appended to the base nameservers generated from
                          DNSPolicy. Duplicated nameservers will be removed.
                        items:
                          type: string
                        type: array
                      options:
                        description: A list of DNS resolver options. This will be
                          merged with the base options generated from DNSPolicy. Duplicated
                          entries will be removed. Resolution options given in Options
                          will override those that appear in the base DNSPolicy.
                        items:
                          description: PodDNSConfigOption defines DNS resolver options
                            of a pod.
                          properties:
                            name:
                              description: Required.
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      searches:
                        description: A list of DNS search domains for host-name lookup.
                          This will be appended to the base search paths generated
                          from DNSPolicy. Duplicated search paths will be removed.
                        items:
                          type: string
                        type: array
                    type: object
                  image:
                    description: Image for RisingWave component.
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: Pull policy of the RisingWave image. The default
                      value is the same as the default of Kubernetes.
                    enum:
                    - Always
                    - Never
                    - IfNotPresent
                    type: string
                  imagePullSecrets:
                    description: Secrets for pulling RisingWave images.
                    items:
                      type: string
                    type: array
                  metadata:
                    description: metadata of the RisingWave's Pods.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations of the object.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels of the object.
                        type: object
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: A map of labels describing the nodes to be scheduled
                      on.
                    type: object
                  podTemplate:
                    description: Base template for Pods of RisingWave. By default,
                      there's no such template and the controller will set all unrelated
                      fields to the default value.
                    type: string
                  priorityClassName:
                    description: If specified, indicates the pod's priority. "system-node-critical"
                      and "system-cluster-critical" are two special keywords which
                      indicate the highest priorities with the former being the highest
                      priority. Any other name must be defined by creating a PriorityClass
                      object with that name. If not specified, the pod priority will
                      be default or zero if there is no default.
                    type: string
                  replicas:
                    description: Replicas of each component in default groups.
                    properties:
                      compactor:
                        description: Replicas of compactor component. Replicas specified
                          here is in a default group (with empty name '').
                        format: int32
                        minimum: 0
                        type: integer
                      compute:
                        description: Replicas of compute component. Replicas specified
                          here is in a default group (with empty name '').
                        format: int32
                        minimum: 0
                        type: integer
                      frontend:
                        description: Replicas of frontend component. Replicas specified
                          here is in a default group (with empty name '').
                        format: int32
                        minimum: 0
                        type: integer
                      meta:
                        description: Replicas of meta component. Replicas specified
                          here is in a default group (with empty name '').
                        format: int32
                        minimum: 0
                        type: integer
                    type: object
                  resources:
                    description: Resources of the RisingWave component.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  securityContext:
                    description: 'SecurityContext holds pod-level security attributes
                      and common container settings. Optional: Defaults to empty.  See
                      type description for default values of each field.'
                    properties:
                      fsGroup:
                        description: "A special supplemental group that applies to
                          all containers in a pod. Some volume types allow the Kubelet
                          to change the ownership of that volume to be owned by the
                          pod: \n 1. The owning GID will be the FSGroup 2. The setgid
                          bit is set (new files created in the volume will be owned
                          by FSGroup) 3. The permission bits are OR'd with rw-rw----
                          \n If unset, the Kubelet will not modify the ownership and
                          permissions of any volume. Note that this field cannot be
                          set when spec.os.name is windows."
                        format: int64
                        type: integer
                      fsGroupChangePolicy:
                        description: 'fsGroupChangePolicy defines behavior of changing
                          ownership and permission of the volume before being exposed
                          inside Pod. This field will only apply to volume types which
                          support fsGroup based ownership(and permissions). It will
                          have no effect on ephemeral volume types such as: secret,
                          configmaps and emptydir. Valid values are "OnRootMismatch"
                          and "Always". If not specified, "Always" is used. Note that
                          this field cannot be set when spec.os.name is windows.'
                        type: string
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in SecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence for that container. Note that this field
                          cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in SecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in SecurityContext.  If set
                          in both SecurityContext and PodSecurityContext, the value
                          specified in SecurityContext takes precedence for that container.
                          Note that this field cannot be set when spec.os.name is
                          windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to all containers.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence
                          for that container. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: The seccomp options to use by the containers
                          in this pod. Note that this field cannot be set when spec.os.name
                          is windows.
                        properties:
                          localhostProfile:
                            description: localhostProfile indicates a profile defined
                              in a file on the node should be used. The profile must
                              be preconfigured on the node to work. Must be a descending
                              path, relative to the kubelet's configured seccomp profile
                              location. Must only be set if type is "Localhost".
                            type: string
                          type:
                            description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                            type: string
                        required:
                        - type
                        type: object
                      supplementalGroups:
                        description: A list of groups applied to the first process
                          run in each container, in addition to the container's primary
                          GID.  If unspecified, no groups will be added to any container.
                          Note that this field cannot be set when spec.os.name is
                          windows.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used
                          for the pod. Pods with unsupported sysctls (by the container
                          runtime) might fail to launch. Note that this field cannot
                          be set when spec.os.name is windows.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options within a container's
                          SecurityContext will be used. If set in both SecurityContext
                          and PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is linux.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: HostProcess determines if a container should
                              be run as a 'Host Process' container. This field is
                              alpha-level and will only be honored by components that
                              enable the WindowsHostProcessContainers feature flag.
                              Setting this field without the feature flag will result
                              in errors when validating the Pod. All of a Pod's containers
                              must have the same effective HostProcess value (it is
                              not allowed to have a mix of HostProcess containers
                              and non-HostProcess containers).  In addition, if HostProcess
                              is true then HostNetwork must also be set to true.
                            type: boolean
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            type: string
                        type: object
                    type: object
                  serviceMetadata:
                    description: Service metadata of the frontend service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations of the object.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels of the object.
                        type: object
                    type: object
                  serviceType:
                    default: ClusterIP
                    description: Service type of the frontend service.
                    enum:
                    - ClusterIP
                    - NodePort
                    - LoadBalancer
                    type: string
                  terminationGracePeriodSeconds:
                    description: Optional duration in seconds the pod needs to terminate
                      gracefully. May be decreased in delete request. Value must be
                      non-negative integer. The value zero indicates stop immediately
                      via the kill signal (no opportunity to shut down). If this value
                      is nil, the default grace period will be used instead. The grace
                      period is the duration in seconds after the processes running
                      in the pod are sent a termination signal and the time when the
                      processes are forcibly halted with a kill signal. Set this value
                      longer than the expected cleanup time for your process. Defaults
                      to 30 seconds.
                    format: int64
                    type: integer
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  upgradeStrategy:
                    description: 'Upgrade strategy for the components. By default,
                      it is the same as the workload''s default strategy that the
                      component is deployed with. Note: the maxSurge will not take
                      effect for the compute component.'
                    properties:
                      inPlaceUpdateStrategy:
                        description: InPlaceUpdateStrategy contains strategies for
                          in-place update.
                        properties:
                          gracePeriodSeconds:
                            description: GracePeriodSeconds is the timespan between
                              set Pod status to not-ready and update images in Pod
                              spec when in-place update a Pod.
                            format: int32
                            type: integer
                        type: object
                      rollingUpdate:
                        description: Rolling update config params. Present only if
                          DeploymentStrategyType = RollingUpdate.
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 0
                            description: 'The maximum number of pods that can be scheduled
                              above the desired replicas during update or specified
                              delete. Value can be an absolute number (ex: 5) or a
                              percentage of desired pods (ex: 10%). Absolute number
                              is calculated from percentage by rounding up. Defaults
                              to 0.'
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 25%
                            description: 'The maximum number of pods that can be unavailable
                              during the update. Value can be an absolute number (ex:
                              5) or a percentage of desired pods (ex: 10%). Absolute
                              number is calculated from percentage by rounding down.
                              Defaults to 25%.'
                            x-kubernetes-int-or-string: true
                          partition:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 0
                            description: 'Partition is the desired number of pods
                              in old revisions. Value can be an absolute number (ex:
                              5) or a percentage of desired pods (ex: 10%). Absolute
                              number is calculated from percentage by rounding up
                              by default. It means when partition is set during pods
                              updating, (replicas - partition value) number of pods
                              will be updated. Default value is 0.'
                            x-kubernetes-int-or-string: true
                        type: object
                      type:
                        default: RollingUpdate
                        description: Type of upgrade. Can be "Recreate" or "RollingUpdate".
                          Default is RollingUpdate.
                        enum:
                        - Recreate
                        - RollingUpdate
                        - InPlaceIfPossible
                        - InPlaceOnly
                        type: string
                    type: object
                type: object
              security:
                description: The spec of security configurations, such as TLS config.
                properties:
                  tls:
                    description: TLS config of RisingWave.
                    properties:
                      enabled:
                        description: Enabled indicates if TLS is enabled on RisingWave.
                        type: boolean
                      secret:
                        description: Secret contains the TLS config. If TLS is enabled,
                          the secret must be provided.
                        properties:
                          cert:
                            default: tls.crt
                            description: The key of the TLS cert. A default value
                              of "tls.crt" will be used if not specified.
                            type: string
                          key:
                            default: tls.key
                            description: The key of the TLS key. A default value of
                              "tls.key" will be used if not specified.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                        type: object
                    type: object
                type: object
              storages:
                description: The spec of meta storage, object storage for compute
                  and compactor, and PVC templates for compute.
                properties:
                  meta:
                    description: RisingWaveMetaStorage is the storage for the meta
                      component.
                    properties:
                      etcd:
                        description: Endpoint of the etcd service for storing the
                          metadata.
                        properties:
                          endpoint:
                            description: Endpoint of etcd. It must be provided.
                            type: string
                          secret:
                            description: 'Secret contains the credentials of access
                              the etcd, it must contain the following keys: * username
                              * password But it is an optional field. Empty value
                              indicates etcd is available without authentication.'
                            type: string
                        required:
                        - endpoint
                        type: object
                      memory:
                        description: Memory indicates to store the metadata in memory.
                          It is only for test usage and strongly discouraged to be
                          set in production. If one is using the memory storage for
                          meta, replicas will not work because they are not going
                          to share the same metadata and any kinds exit of the process
                          will cause a permanent loss of the data.
                        type: boolean
                    type: object
                  object:
                    description: Storage spec for object storage.
                    properties:
                      aliyunOSS:
                        description: AliyunOSS storage spec.
                        properties:
                          bucket:
                            description: Bucket of the Aliyun OSS service.
                            type: string
                          internalEndpoint:
                            description: InternalEndpoint indicates if we use the
                              internal endpoint to access Aliyun OSS, which is only
                              available in the internal network.
                            type: boolean
                          region:
                            description: Region of Aliyun OSS service. It is an optional
                              field that overrides the `Region` key from the secret.
                              Specifying the region here makes a guarantee that it
                              won't be changed anymore.
                            type: string
                          secret:
                            description: 'Secret contains the credentials to access
                              the Aliyun OSS service. It must contain the following
                              keys: * AccessKeyID * SecretAccessKey * Region (optional
                              if region is specified in the field.)'
                            type: string
                        required:
                        - bucket
                        - secret
                        type: object
                      memory:
                        description: Memory indicates to store the data in memory.
                          It's only for test usage and strongly discouraged to be
                          used in production.
                        type: boolean
                      minio:
                        description: MinIO storage spec.
                        properties:
                          bucket:
                            description: Bucket of the MinIO service.
                            type: string
                          endpoint:
                            description: Endpoint of the MinIO service.
                            type: string
                          secret:
                            description: 'Secret contains the credentials to access
                              the MinIO service. It must contain the following keys:
                              * username * password'
                            type: string
                        required:
                        - bucket
                        - endpoint
                        - secret
                        type: object
                      s3:
                        description: S3 storage spec.
                        properties:
                          bucket:
                            description: Bucket of the AWS S3 service.
                            type: string
                          endpoint:
                            description: Endpoint of the AWS (or other vendor's S3-compatible)
                              service. Leave it empty when using AWS S3 service. You
                              can reference the `REGION` and `BUCKET` variables in
                              the endpoint with `${BUCKET}` and `${REGION}`, e.g.,
                              s3.${REGION}.amazonaws.com ${BUCKET}.s3.${REGION}.amazonaws.com
                            pattern: ^(?:https://)?(?:[^/.\s]+\.)*(?:[^/\s]+)*$
                            type: string
                          region:
                            description: Region of AWS S3 service. It is an optional
                              field that overrides the `Region` key from the secret.
                              Specifying the region here makes a guarantee that it
                              won't be changed anymore.
                            type: string
                          secret:
                            description: 'Secret contains the credentials to access
                              the AWS S3 service. It must contain the following keys:
                              * AccessKeyID * SecretAccessKey * Region (optional if
                              region is specified in the field.)'
                            type: string
                          virtualHostedStyle:
                            description: VirtualHostedStyle indicates to use a virtual
                              hosted endpoint when endpoint is specified. The operator
                              automatically adds the bucket prefix for you if this
                              is enabled. Be careful about doubly using the style
                              by specifying an endpoint of virtual hosted style as
                              well as enabling this.
                            type: boolean
                        required:
                        - bucket
                        - secret
                        type: object
                    type: object
                  pvcTemplates:
                    description: The persistent volume claim templates for the compute
                      component. PVCs declared here can be referenced in the groups
                      of compute component.
                    items:
                      description: PersistentVolumeClaim is a user's request for and
                        claim to a persistent volume
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        metadata:
                          description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                          type: object
                        spec:
                          description: 'spec defines the desired characteristics of
                            a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            accessModes:
                              description: 'accessModes contains the desired access
                                modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: 'dataSource field can be used to specify
                                either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                * An existing PVC (PersistentVolumeClaim) If the provisioner
                                or an external controller can support the specified
                                data source, it will create a new volume based on
                                the contents of the specified data source. If the
                                AnyVolumeDataSource feature gate is enabled, this
                                field will always have the same contents as the DataSourceRef
                                field.'
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                              x-kubernetes-map-type: atomic
                            dataSourceRef:
                              description: 'dataSourceRef specifies the object from
                                which to populate the volume with data, if a non-empty
                                volume is desired. This may be any local object from
                                a non-empty API group (non core object) or a PersistentVolumeClaim
                                object. When this field is specified, volume binding
                                will only succeed if the type of the specified object
                                matches some installed volume populator or dynamic
                                provisioner. This field will replace the functionality
                                of the DataSource field and as such if both fields
                                are non-empty, they must have the same value. For
                                backwards compatibility, both fields (DataSource and
                                DataSourceRef) will be set to the same value automatically
                                if one of them is empty and the other is non-empty.
                                There are two important differences between DataSource
                                and DataSourceRef: * While DataSource only allows
                                two specific types of objects, DataSourceRef allows
                                any non-core object, as well as PersistentVolumeClaim
                                objects. * While DataSource ignores disallowed values
                                (dropping them), DataSourceRef preserves all values,
                                and generates an error if a disallowed value is specified.
                                (Beta) Using this field requires the AnyVolumeDataSource
                                feature gate to be enabled.'
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                              x-kubernetes-map-type: atomic
                            resources:
                              description: 'resources represents the minimum resources
                                the volume should have. If RecoverVolumeExpansionFailure
                                feature is enabled users are allowed to specify resource
                                requirements that are lower than previous value but
                                must still be higher than capacity recorded in the
                                status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            selector:
                              description: selector is a label query over volumes
                                to consider for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            storageClassName:
                              description: 'storageClassName is the name of the StorageClass
                                required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                              type: string
                            volumeMode:
                              description: volumeMode defines what type of volume
                                is required by the claim. Value of Filesystem is implied
                                when not included in claim spec.
                              type: string
                            volumeName:
                              description: volumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                        status:
                          description: 'status represents the current information/status
                            of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            accessModes:
                              description: 'accessModes contains the actual access
                                modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            allocatedResources:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: allocatedResources is the storage resource
                                within AllocatedResources tracks the capacity allocated
                                to a PVC. It may be larger than the actual capacity
                                when a volume expansion operation is requested. For
                                storage quota, the larger value from allocatedResources
                                and PVC.spec.resources is used. If allocatedResources
                                is not set, PVC.spec.resources alone is used for quota
                                calculation. If a volume expansion capacity request
                                is lowered, allocatedResources is only lowered if
                                there are no expansion operations in progress and
                                if the actual volume capacity is equal or lower than
                                the requested capacity. This is an alpha field and
                                requires enabling RecoverVolumeExpansionFailure feature.
                              type: object
                            capacity:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: capacity represents the actual resources
                                of the underlying volume.
                              type: object
                            conditions:
                              description: conditions is the current Condition of
                                persistent volume claim. If underlying persistent
                                volume is being resized then the Condition will be
                                set to 'ResizeStarted'.
                              items:
                                description: PersistentVolumeClaimCondition contails
                                  details about state of pvc
                                properties:
                                  lastProbeTime:
                                    description: lastProbeTime is the time we probed
                                      the condition.
                                    format: date-time
                                    type: string
                                  lastTransitionTime:
                                    description: lastTransitionTime is the time the
                                      condition transitioned from one status to another.
                                    format: date-time
                                    type: string
                                  message:
                                    description: message is the human-readable message
                                      indicating details about last transition.
                                    type: string
                                  reason:
                                    description: reason is a unique, this should be
                                      a short, machine understandable string that
                                      gives the reason for condition's last transition.
                                      If it reports "ResizeStarted" that means the
                                      underlying persistent volume is being resized.
                                    type: string
                                  status:
                                    type: string
                                  type:
                                    description: PersistentVolumeClaimConditionType
                                      is a valid value of PersistentVolumeClaimCondition.Type
                                    type: string
                                required:
                                - status
                                - type
                                type: object
                              type: array
                            phase:
                              description: phase represents the current phase of PersistentVolumeClaim.
                              type: string
                            resizeStatus:
                              description: resizeStatus stores status of resize operation.
                                ResizeStatus is not set by default but when expansion
                                is complete resizeStatus is set to empty string by
                                resize controller or kubelet. This is an alpha field
                                and requires enabling RecoverVolumeExpansionFailure
                                feature.
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: RisingWaveStatus is the status of RisingWave.
            properties:
              componentReplicas:
                description: Replica status of components.
                properties:
                  compactor:
                    description: Running status of compactor.
                    properties:
                      groups:
                        description: List of running status of each group.
                        items:
                          description: ComponentGroupReplicasStatus are the running
                            status of Pods in group.
                          properties:
                            exists:
                              description: Existence status of the group.
                              type: boolean
                            name:
                              description: Name of the group.
                              type: string
                            running:
                              description: Running replicas in the group.
                              format: int32
                              type: integer
                            target:
                              description: Target replicas of the group.
                              format: int32
                              type: integer
                          required:
                          - name
                          - running
                          - target
                          type: object
                        type: array
                      running:
                        description: Total running replicas of the component.
                        format: int32
                        type: integer
                      target:
                        description: Total target replicas of the component.
                        format: int32
                        type: integer
                    required:
                    - running
                    - target
                    type: object
                  compute:
                    description: Running status of compute.
                    properties:
                      groups:
                        description: List of running status of each group.
                        items:
                          description: ComponentGroupReplicasStatus are the running
                            status of Pods in group.
                          properties:
                            exists:
                              description: Existence status of the group.
                              type: boolean
                            name:
                              description: Name of the group.
                              type: string
                            running:
                              description: Running replicas in the group.
                              format: int32
                              type: integer
                            target:
                              description: Target replicas of the group.
                              format: int32
                              type: integer
                          required:
                          - name
                          - running
                          - target
                          type: object
                        type: array
                      running:
                        description: Total running replicas of the component.
                        format: int32
                        type: integer
                      target:
                        description: Total target replicas of the component.
                        format: int32
                        type: integer
                    required:
                    - running
                    - target
                    type: object
                  frontend:
                    description: Running status of frontend.
                    properties:
                      groups:
                        description: List of running status of each group.
                        items:
                          description: ComponentGroupReplicasStatus are the running
                            status of Pods in group.
                          properties:
                            exists:
                              description: Existence status of the group.
                              type: boolean
                            name:
                              description: Name of the group.
                              type: string
                            running:
                              description: Running replicas in the group.
                              format: int32
                              type: integer
                            target:
                              description: Target replicas of the group.
                              format: int32
                              type: integer
                          required:
                          - name
                          - running
                          - target
                          type: object
                        type: array
                      running:
                        description: Total running replicas of the component.
                        format: int32
                        type: integer
                      target:
                        description: Total target replicas of the component.
                        format: int32
                        type: integer
                    required:
                    - running
                    - target
                    type: object
                  meta:
                    description: Running status of meta.
                    properties:
                      groups:
                        description: List of running status of each group.
                        items:
                          description: ComponentGroupReplicasStatus are the running
                            status of Pods in group.
                          properties:
                            exists:
                              description: Existence status of the group.
                              type: boolean
                            name:
                              description: Name of the group.
                              type: string
                            running:
                              description: Running replicas in the group.
                              format: int32
                              type: integer
                            target:
                              description: Target replicas of the group.
                              format: int32
                              type: integer
                          required:
                          - name
                          - running
                          - target
                          type: object
                        type: array
                      running:
                        description: Total running replicas of the component.
                        format: int32
                        type: integer
                      target:
                        description: Total target replicas of the component.
                        format: int32
                        type: integer
                    required:
                    - running
                    - target
                    type: object
                required:
                - compactor
                - compute
                - frontend
                - meta
                type: object
              conditions:
                description: Conditions of the RisingWave.
                items:
                  description: RisingWaveCondition indicates a condition of RisingWave.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      nullable: true
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition
                      type: string
                    type:
                      description: Type of the condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: Observed generation by controller. It will be updated
                  when controller observes the changes on the spec and going to sync
                  the subresources.
                format: int64
                type: integer
              scaleViews:
                description: Scale view locks.
                items:
                  description: RisingWaveScaleViewLock is a lock for RisingWaveScaleViews.
                  properties:
                    component:
                      description: Component of the lock.
                      type: string
                    generation:
                      description: Generation of the lock.
                      format: int64
                      type: integer
                    groupLocks:
                      description: Group locks.
                      items:
                        description: RisingWaveScaleViewLockGroupLock is the lock
                          record of RisingWaveScaleView.
                        properties:
                          name:
                            description: Group name.
                            type: string
                          replicas:
                            description: Locked replica value.
                            format: int32
                            type: integer
                        required:
                        - name
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    name:
                      description: Name of the owned RisingWaveScaleView object.
                      type: string
                    uid:
                      description: UID of the owned RisingWaveScaleView object.
                      type: string
                  required:
                  - component
                  - generation
                  - name
                  - uid
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              storages:
                description: Status of the external storages.
                properties:
                  meta:
                    description: RisingWaveMetaStorageStatus is the status of meta
                      storage.
                    properties:
                      type:
                        description: MetaStorageType is the type name of meta storage.
                        type: string
                    required:
                    - type
                    type: object
                  object:
                    description: RisingWaveObjectStorageStatus is the status of object
                      storage.
                    properties:
                      type:
                        description: ObjectStorageType is the type name of object
                          storage.
                        type: string
                    required:
                    - type
                    type: object
                required:
                - meta
                - object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
