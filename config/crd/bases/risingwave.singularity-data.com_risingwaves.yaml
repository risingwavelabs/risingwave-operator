---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: risingwaves.risingwave.singularity-data.com
spec:
  group: risingwave.singularity-data.com
  names:
    categories:
    - all
    - streaming
    kind: RisingWave
    listKind: RisingWaveList
    plural: risingwaves
    shortNames:
    - rw
    singular: risingwave
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Running")].status
      name: RUNNING
      type: string
    - jsonPath: .status.storages.meta.type
      name: STORAGE(META)
      type: string
    - jsonPath: .status.storages.object.type
      name: STORAGE(OBJECT)
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RisingWaveSpec is the overall spec.
            properties:
              components:
                description: Components contains the ports and some controllers (such
                  as `restartAt`) of each component, as well as an advanced concept
                  called `group` to override the global template and create groups
                  of Pods, e.g., deployment in hybrid-arch cluster.
                properties:
                  compactor:
                    description: Compactor is for the compactor component.
                    properties:
                      groups:
                        description: Groups are the groups of Pods of the compactor
                          component.
                        items:
                          description: RisingWaveComponentGroup is the common deployment
                            group of each component. Currently we use this group for
                            meta/frontend/compactor.
                          properties:
                            image:
                              description: Image is the RisingWave image used.
                              type: string
                            imagePullPolicy:
                              default: IfNotPresent
                              description: ImagePullPolicy is the pull policy of RisingWave
                                image. The default value is the same as the default
                                of Kubernetes.
                              enum:
                              - Always
                              - Never
                              - IfNotPresent
                              type: string
                            imagePullSecrets:
                              description: ImagePullSecrets are the secrets for pulling
                                RisingWave images.
                              items:
                                type: string
                              type: array
                            name:
                              description: Name is the name of the group.
                              minLength: 1
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: NodeSelector is a map of labels describing
                                the nodes to be scheduled on.
                              type: object
                            podTemplate:
                              description: PodTemplate is the base template for Pods
                                of RisingWave. By default there's no such template
                                and the controller will set all unrelated fields to
                                the default value.
                              type: string
                            replicas:
                              description: Replicas is the replicas of Pods in this
                                group.
                              format: int32
                              minimum: 1
                              type: integer
                            resources:
                              description: Resources are the running resources of
                                the RisingWave component.
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            upgradeStrategy:
                              description: 'UpgradeStrategy is the upgrade strategy
                                for the components. By default it is the same as the
                                workload''s default strategy that the component is
                                deployed with. Note: the maxSurge will not take effect
                                for the compute component.'
                              properties:
                                rollingUpdate:
                                  description: 'Rolling update config params. Present
                                    only if DeploymentStrategyType = RollingUpdate.
                                    --- TODO: Update this to follow our convention
                                    for oneOf, whatever we decide it to be.'
                                  properties:
                                    maxUnavailable:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 25%
                                      description: 'The maximum number of pods that
                                        can be unavailable during the update. Value
                                        can be an absolute number (ex: 5) or a percentage
                                        of desired pods (ex: 10%). Absolute number
                                        is calculated from percentage by rounding
                                        down. Defaults to 25%.'
                                      x-kubernetes-int-or-string: true
                                  type: object
                                type:
                                  default: RollingUpdate
                                  description: Type of upgrade. Can be "Recreate"
                                    or "RollingUpdate". Default is RollingUpdate.
                                  enum:
                                  - Recreate
                                  - RollingUpdate
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      ports:
                        description: Ports are the ports to be listened by the compactor
                          Pods.
                        properties:
                          metrics:
                            description: MetricsPort is the metrics port of the component.
                              It always serves the metrics in Prometheus format.
                            format: int32
                            minimum: 1
                            type: integer
                          service:
                            description: ServicePort is the service port of the component.
                              For each component, the 'service' has different meanings.
                              It's an optional field and if it's left out, a default
                              port (varies among components) will be used.
                            format: int32
                            minimum: 1
                            type: integer
                        type: object
                      restartAt:
                        description: RestartAt is the time that the Pods of frontend
                          that should be restarted. Setting a value on this field
                          will trigger a recreation of all Pods of this component.
                        format: date-time
                        type: string
                    type: object
                  compute:
                    description: Compute is for the compute component.
                    properties:
                      groups:
                        description: Groups are the groups of Pods of the compute
                          component.
                        items:
                          description: RisingWaveComputeGroup is the group for component
                            compute.
                          properties:
                            image:
                              description: Image is the RisingWave image used.
                              type: string
                            imagePullPolicy:
                              default: IfNotPresent
                              description: ImagePullPolicy is the pull policy of RisingWave
                                image. The default value is the same as the default
                                of Kubernetes.
                              enum:
                              - Always
                              - Never
                              - IfNotPresent
                              type: string
                            imagePullSecrets:
                              description: ImagePullSecrets are the secrets for pulling
                                RisingWave images.
                              items:
                                type: string
                              type: array
                            name:
                              description: Name is the name of the group.
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: NodeSelector is a map of labels describing
                                the nodes to be scheduled on.
                              type: object
                            podTemplate:
                              description: PodTemplate is the base template for Pods
                                of RisingWave. By default there's no such template
                                and the controller will set all unrelated fields to
                                the default value.
                              type: string
                            replicas:
                              description: Replicas is the replicas of Pods in this
                                group.
                              format: int32
                              minimum: 1
                              type: integer
                            resources:
                              description: Resources are the running resources of
                                the RisingWave component.
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            upgradeStrategy:
                              description: 'UpgradeStrategy is the upgrade strategy
                                for the components. By default it is the same as the
                                workload''s default strategy that the component is
                                deployed with. Note: the maxSurge will not take effect
                                for the compute component.'
                              properties:
                                rollingUpdate:
                                  description: 'Rolling update config params. Present
                                    only if DeploymentStrategyType = RollingUpdate.
                                    --- TODO: Update this to follow our convention
                                    for oneOf, whatever we decide it to be.'
                                  properties:
                                    maxUnavailable:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 25%
                                      description: 'The maximum number of pods that
                                        can be unavailable during the update. Value
                                        can be an absolute number (ex: 5) or a percentage
                                        of desired pods (ex: 10%). Absolute number
                                        is calculated from percentage by rounding
                                        down. Defaults to 25%.'
                                      x-kubernetes-int-or-string: true
                                  type: object
                                type:
                                  default: RollingUpdate
                                  description: Type of upgrade. Can be "Recreate"
                                    or "RollingUpdate". Default is RollingUpdate.
                                  enum:
                                  - Recreate
                                  - RollingUpdate
                                  type: string
                              type: object
                            volumeMounts:
                              description: VolumeMounts are the volumes to be mounted
                                on the Pods.
                              items:
                                description: VolumeMount describes a mounting of a
                                  Volume within a container.
                                properties:
                                  mountPath:
                                    description: Path within the container at which
                                      the volume should be mounted.  Must not contain
                                      ':'.
                                    type: string
                                  mountPropagation:
                                    description: mountPropagation determines how mounts
                                      are propagated from the host to container and
                                      the other way around. When not set, MountPropagationNone
                                      is used. This field is beta in 1.10.
                                    type: string
                                  name:
                                    description: This must match the Name of a Volume.
                                    type: string
                                  readOnly:
                                    description: Mounted read-only if true, read-write
                                      otherwise (false or unspecified). Defaults to
                                      false.
                                    type: boolean
                                  subPath:
                                    description: Path within the volume from which
                                      the container's volume should be mounted. Defaults
                                      to "" (volume's root).
                                    type: string
                                  subPathExpr:
                                    description: Expanded path within the volume from
                                      which the container's volume should be mounted.
                                      Behaves similarly to SubPath but environment
                                      variable references $(VAR_NAME) are expanded
                                      using the container's environment. Defaults
                                      to "" (volume's root). SubPathExpr and SubPath
                                      are mutually exclusive.
                                    type: string
                                required:
                                - mountPath
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      ports:
                        description: Ports are the ports to be listened by the compute
                          Pods.
                        properties:
                          metrics:
                            description: MetricsPort is the metrics port of the component.
                              It always serves the metrics in Prometheus format.
                            format: int32
                            minimum: 1
                            type: integer
                          service:
                            description: ServicePort is the service port of the component.
                              For each component, the 'service' has different meanings.
                              It's an optional field and if it's left out, a default
                              port (varies among components) will be used.
                            format: int32
                            minimum: 1
                            type: integer
                        type: object
                      restartAt:
                        description: RestartAt is the time that the Pods of frontend
                          that should be restarted. Setting a value on this field
                          will trigger a recreation of all Pods of this component.
                        format: date-time
                        type: string
                    type: object
                  frontend:
                    description: Frontend is for the frontend component.
                    properties:
                      groups:
                        description: Groups are the groups of Pods of the frontend
                          component.
                        items:
                          description: RisingWaveComponentGroup is the common deployment
                            group of each component. Currently we use this group for
                            meta/frontend/compactor.
                          properties:
                            image:
                              description: Image is the RisingWave image used.
                              type: string
                            imagePullPolicy:
                              default: IfNotPresent
                              description: ImagePullPolicy is the pull policy of RisingWave
                                image. The default value is the same as the default
                                of Kubernetes.
                              enum:
                              - Always
                              - Never
                              - IfNotPresent
                              type: string
                            imagePullSecrets:
                              description: ImagePullSecrets are the secrets for pulling
                                RisingWave images.
                              items:
                                type: string
                              type: array
                            name:
                              description: Name is the name of the group.
                              minLength: 1
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: NodeSelector is a map of labels describing
                                the nodes to be scheduled on.
                              type: object
                            podTemplate:
                              description: PodTemplate is the base template for Pods
                                of RisingWave. By default there's no such template
                                and the controller will set all unrelated fields to
                                the default value.
                              type: string
                            replicas:
                              description: Replicas is the replicas of Pods in this
                                group.
                              format: int32
                              minimum: 1
                              type: integer
                            resources:
                              description: Resources are the running resources of
                                the RisingWave component.
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            upgradeStrategy:
                              description: 'UpgradeStrategy is the upgrade strategy
                                for the components. By default it is the same as the
                                workload''s default strategy that the component is
                                deployed with. Note: the maxSurge will not take effect
                                for the compute component.'
                              properties:
                                rollingUpdate:
                                  description: 'Rolling update config params. Present
                                    only if DeploymentStrategyType = RollingUpdate.
                                    --- TODO: Update this to follow our convention
                                    for oneOf, whatever we decide it to be.'
                                  properties:
                                    maxUnavailable:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 25%
                                      description: 'The maximum number of pods that
                                        can be unavailable during the update. Value
                                        can be an absolute number (ex: 5) or a percentage
                                        of desired pods (ex: 10%). Absolute number
                                        is calculated from percentage by rounding
                                        down. Defaults to 25%.'
                                      x-kubernetes-int-or-string: true
                                  type: object
                                type:
                                  default: RollingUpdate
                                  description: Type of upgrade. Can be "Recreate"
                                    or "RollingUpdate". Default is RollingUpdate.
                                  enum:
                                  - Recreate
                                  - RollingUpdate
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      ports:
                        description: Ports are the ports to be listened by the frontend
                          Pods.
                        properties:
                          metrics:
                            description: MetricsPort is the metrics port of the component.
                              It always serves the metrics in Prometheus format.
                            format: int32
                            minimum: 1
                            type: integer
                          service:
                            description: ServicePort is the service port of the component.
                              For each component, the 'service' has different meanings.
                              It's an optional field and if it's left out, a default
                              port (varies among components) will be used.
                            format: int32
                            minimum: 1
                            type: integer
                        type: object
                      restartAt:
                        description: RestartAt is the time that the Pods of frontend
                          that should be restarted. Setting a value on this field
                          will trigger a recreation of all Pods of this component.
                        format: date-time
                        type: string
                    type: object
                  meta:
                    description: Meta is for the meta component.
                    properties:
                      groups:
                        description: Groups are the groups of Pods of the meta component.
                        items:
                          description: RisingWaveComponentGroup is the common deployment
                            group of each component. Currently we use this group for
                            meta/frontend/compactor.
                          properties:
                            image:
                              description: Image is the RisingWave image used.
                              type: string
                            imagePullPolicy:
                              default: IfNotPresent
                              description: ImagePullPolicy is the pull policy of RisingWave
                                image. The default value is the same as the default
                                of Kubernetes.
                              enum:
                              - Always
                              - Never
                              - IfNotPresent
                              type: string
                            imagePullSecrets:
                              description: ImagePullSecrets are the secrets for pulling
                                RisingWave images.
                              items:
                                type: string
                              type: array
                            name:
                              description: Name is the name of the group.
                              minLength: 1
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: NodeSelector is a map of labels describing
                                the nodes to be scheduled on.
                              type: object
                            podTemplate:
                              description: PodTemplate is the base template for Pods
                                of RisingWave. By default there's no such template
                                and the controller will set all unrelated fields to
                                the default value.
                              type: string
                            replicas:
                              description: Replicas is the replicas of Pods in this
                                group.
                              format: int32
                              minimum: 1
                              type: integer
                            resources:
                              description: Resources are the running resources of
                                the RisingWave component.
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            upgradeStrategy:
                              description: 'UpgradeStrategy is the upgrade strategy
                                for the components. By default it is the same as the
                                workload''s default strategy that the component is
                                deployed with. Note: the maxSurge will not take effect
                                for the compute component.'
                              properties:
                                rollingUpdate:
                                  description: 'Rolling update config params. Present
                                    only if DeploymentStrategyType = RollingUpdate.
                                    --- TODO: Update this to follow our convention
                                    for oneOf, whatever we decide it to be.'
                                  properties:
                                    maxUnavailable:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 25%
                                      description: 'The maximum number of pods that
                                        can be unavailable during the update. Value
                                        can be an absolute number (ex: 5) or a percentage
                                        of desired pods (ex: 10%). Absolute number
                                        is calculated from percentage by rounding
                                        down. Defaults to 25%.'
                                      x-kubernetes-int-or-string: true
                                  type: object
                                type:
                                  default: RollingUpdate
                                  description: Type of upgrade. Can be "Recreate"
                                    or "RollingUpdate". Default is RollingUpdate.
                                  enum:
                                  - Recreate
                                  - RollingUpdate
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      ports:
                        description: Ports are the ports to be listened by the meta
                          Pods.
                        properties:
                          dashboard:
                            description: DashboardPort is the dashboard port of the
                              meta, a default value of 8080 will be used if not specified.
                            format: int32
                            minimum: 1
                            type: integer
                          metrics:
                            description: MetricsPort is the metrics port of the component.
                              It always serves the metrics in Prometheus format.
                            format: int32
                            minimum: 1
                            type: integer
                          service:
                            description: ServicePort is the service port of the component.
                              For each component, the 'service' has different meanings.
                              It's an optional field and if it's left out, a default
                              port (varies among components) will be used.
                            format: int32
                            minimum: 1
                            type: integer
                        type: object
                      restartAt:
                        description: RestartAt is the time that the Pods of frontend
                          that should be restarted. Setting a value on this field
                          will trigger a recreation of all Pods of this component.
                        format: date-time
                        type: string
                    type: object
                type: object
              configuration:
                description: Configuration contains the config template configuration.
                properties:
                  configmap:
                    description: ConfigMap is the reference to a key in a config map
                      that contains the base config for RisingWave. It's an optional
                      field and can be left out. If not specified, a default config
                      is going to be used.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the ConfigMap or its key must
                          be defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              global:
                description: Global contains a shared template for components and
                  a global scope of replicas.
                properties:
                  image:
                    description: Image is the RisingWave image used.
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: ImagePullPolicy is the pull policy of RisingWave
                      image. The default value is the same as the default of Kubernetes.
                    enum:
                    - Always
                    - Never
                    - IfNotPresent
                    type: string
                  imagePullSecrets:
                    description: ImagePullSecrets are the secrets for pulling RisingWave
                      images.
                    items:
                      type: string
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector is a map of labels describing the nodes
                      to be scheduled on.
                    type: object
                  podTemplate:
                    description: PodTemplate is the base template for Pods of RisingWave.
                      By default there's no such template and the controller will
                      set all unrelated fields to the default value.
                    type: string
                  replicas:
                    description: Replicas is the replicas of each component, in global
                      scope.
                    properties:
                      compactor:
                        description: Compactor is the replicas of compactor component.
                        format: int32
                        type: integer
                      compute:
                        description: Compute is the replicas of compute component.
                        format: int32
                        type: integer
                      frontend:
                        description: Frontend is the replicas of frontend component.
                        format: int32
                        type: integer
                      meta:
                        description: Meta is the replicas of meta component.
                        format: int32
                        type: integer
                    type: object
                  resources:
                    description: Resources are the running resources of the RisingWave
                      component.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  serviceType:
                    default: ClusterIP
                    description: ServiceType is the service type of the frontend service.
                    enum:
                    - ClusterIP
                    - NodePort
                    - LoadBalancer
                    type: string
                  upgradeStrategy:
                    description: 'UpgradeStrategy is the upgrade strategy for the
                      components. By default it is the same as the workload''s default
                      strategy that the component is deployed with. Note: the maxSurge
                      will not take effect for the compute component.'
                    properties:
                      rollingUpdate:
                        description: 'Rolling update config params. Present only if
                          DeploymentStrategyType = RollingUpdate. --- TODO: Update
                          this to follow our convention for oneOf, whatever we decide
                          it to be.'
                        properties:
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 25%
                            description: 'The maximum number of pods that can be unavailable
                              during the update. Value can be an absolute number (ex:
                              5) or a percentage of desired pods (ex: 10%). Absolute
                              number is calculated from percentage by rounding down.
                              Defaults to 25%.'
                            x-kubernetes-int-or-string: true
                        type: object
                      type:
                        default: RollingUpdate
                        description: Type of upgrade. Can be "Recreate" or "RollingUpdate".
                          Default is RollingUpdate.
                        enum:
                        - Recreate
                        - RollingUpdate
                        type: string
                    type: object
                type: object
              security:
                description: Security contains the TLS configuration.
                properties:
                  tls:
                    description: TLS is the TLS config of RisingWave.
                    properties:
                      enabled:
                        description: Enabled indicates if TLS is enabled on RisingWave.
                        type: boolean
                      secret:
                        description: Secret is the secret that contains the TLS config.
                          If TLS is enabled, the secret must be provided.
                        properties:
                          cert:
                            default: tls.crt
                            description: Cert is the cert of the TLS cert. A default
                              value of "tls.crt" will be used if not specified.
                            type: string
                          key:
                            default: tls.key
                            description: Key is the key of the TLS key. A default
                              value of "tls.key" will be used if not specified.
                            type: string
                          name:
                            description: Name is the name of the secret.
                            type: string
                        type: object
                    type: object
                type: object
              storages:
                description: Storages contains the storage for meta, the object storage
                  for compute and compactor, and the PVC template for compute.
                properties:
                  meta:
                    description: RisingWaveMetaStorage is the storage for the meta
                      component.
                    properties:
                      etcd:
                        description: Etcd is the endpoint of the etcd service for
                          storing the metadata.
                        properties:
                          endpoint:
                            description: Endpoint is the endpoint of etcd. It must
                              be provided.
                            type: string
                          secret:
                            description: 'Secret is the secret contains credentials
                              of etcd, it must contains the following keys: * username
                              * password But it is an optional field. Empty value
                              indicates etcd is available without authentication.'
                            type: string
                        required:
                        - endpoint
                        type: object
                      memory:
                        description: Memory indicates to store the metadata in memory.
                          It is only for test usage and strongly discouraged to be
                          set in production. If one is using the memory storage for
                          meta, replicas will not work because they are not going
                          to share the same metadata and any kinds exit of the process
                          will cause a permanent loss of the data.
                        type: boolean
                    type: object
                  object:
                    description: Object is the storage declaration of compute and
                      compactor.
                    properties:
                      memory:
                        description: Memory indicates to store the data in memory.
                          It's only for test usage and strongly discouraged to be
                          used in production.
                        type: boolean
                      minio:
                        description: MinIO indicates to use the MinIO storage.
                        properties:
                          bucket:
                            description: Bucket is the bucket of the MinIO service.
                            type: string
                          endpoint:
                            description: Endpoint is the endpoint of the MinIO service.
                            type: string
                          secret:
                            description: 'Secret is the secret containing the credentials
                              to access the MinIO service. It must contain the the
                              following keys: * username * password'
                            type: string
                        type: object
                      s3:
                        description: S3 indicates to use the S3 storage.
                        properties:
                          bucket:
                            description: Bucket is the bucket of the AWS S3 service.
                            type: string
                          secret:
                            description: 'Secret is the secret containing the credentials
                              to access the AWS S3 service. It must contain the the
                              following keys: * AccessKeyID * SecretAccessKey * Region'
                            type: string
                        type: object
                    type: object
                  pvcTemplates:
                    description: PVCTemplates are the persistent volume claim templates
                      for the compute component. PVCs declared here can be referenced
                      in the groups of compute component.
                    items:
                      description: PersistentVolumeClaim is a user's request for and
                        claim to a persistent volume
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        metadata:
                          description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                          type: object
                        spec:
                          description: 'spec defines the desired characteristics of
                            a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            accessModes:
                              description: 'accessModes contains the desired access
                                modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: 'dataSource field can be used to specify
                                either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                * An existing PVC (PersistentVolumeClaim) If the provisioner
                                or an external controller can support the specified
                                data source, it will create a new volume based on
                                the contents of the specified data source. If the
                                AnyVolumeDataSource feature gate is enabled, this
                                field will always have the same contents as the DataSourceRef
                                field.'
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                              x-kubernetes-map-type: atomic
                            dataSourceRef:
                              description: 'dataSourceRef specifies the object from
                                which to populate the volume with data, if a non-empty
                                volume is desired. This may be any local object from
                                a non-empty API group (non core object) or a PersistentVolumeClaim
                                object. When this field is specified, volume binding
                                will only succeed if the type of the specified object
                                matches some installed volume populator or dynamic
                                provisioner. This field will replace the functionality
                                of the DataSource field and as such if both fields
                                are non-empty, they must have the same value. For
                                backwards compatibility, both fields (DataSource and
                                DataSourceRef) will be set to the same value automatically
                                if one of them is empty and the other is non-empty.
                                There are two important differences between DataSource
                                and DataSourceRef: * While DataSource only allows
                                two specific types of objects, DataSourceRef allows
                                any non-core object, as well as PersistentVolumeClaim
                                objects. * While DataSource ignores disallowed values
                                (dropping them), DataSourceRef preserves all values,
                                and generates an error if a disallowed value is specified.
                                (Beta) Using this field requires the AnyVolumeDataSource
                                feature gate to be enabled.'
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                              x-kubernetes-map-type: atomic
                            resources:
                              description: 'resources represents the minimum resources
                                the volume should have. If RecoverVolumeExpansionFailure
                                feature is enabled users are allowed to specify resource
                                requirements that are lower than previous value but
                                must still be higher than capacity recorded in the
                                status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            selector:
                              description: selector is a label query over volumes
                                to consider for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            storageClassName:
                              description: 'storageClassName is the name of the StorageClass
                                required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                              type: string
                            volumeMode:
                              description: volumeMode defines what type of volume
                                is required by the claim. Value of Filesystem is implied
                                when not included in claim spec.
                              type: string
                            volumeName:
                              description: volumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                        status:
                          description: 'status represents the current information/status
                            of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            accessModes:
                              description: 'accessModes contains the actual access
                                modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            allocatedResources:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: allocatedResources is the storage resource
                                within AllocatedResources tracks the capacity allocated
                                to a PVC. It may be larger than the actual capacity
                                when a volume expansion operation is requested. For
                                storage quota, the larger value from allocatedResources
                                and PVC.spec.resources is used. If allocatedResources
                                is not set, PVC.spec.resources alone is used for quota
                                calculation. If a volume expansion capacity request
                                is lowered, allocatedResources is only lowered if
                                there are no expansion operations in progress and
                                if the actual volume capacity is equal or lower than
                                the requested capacity. This is an alpha field and
                                requires enabling RecoverVolumeExpansionFailure feature.
                              type: object
                            capacity:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: capacity represents the actual resources
                                of the underlying volume.
                              type: object
                            conditions:
                              description: conditions is the current Condition of
                                persistent volume claim. If underlying persistent
                                volume is being resized then the Condition will be
                                set to 'ResizeStarted'.
                              items:
                                description: PersistentVolumeClaimCondition contails
                                  details about state of pvc
                                properties:
                                  lastProbeTime:
                                    description: lastProbeTime is the time we probed
                                      the condition.
                                    format: date-time
                                    type: string
                                  lastTransitionTime:
                                    description: lastTransitionTime is the time the
                                      condition transitioned from one status to another.
                                    format: date-time
                                    type: string
                                  message:
                                    description: message is the human-readable message
                                      indicating details about last transition.
                                    type: string
                                  reason:
                                    description: reason is a unique, this should be
                                      a short, machine understandable string that
                                      gives the reason for condition's last transition.
                                      If it reports "ResizeStarted" that means the
                                      underlying persistent volume is being resized.
                                    type: string
                                  status:
                                    type: string
                                  type:
                                    description: PersistentVolumeClaimConditionType
                                      is a valid value of PersistentVolumeClaimCondition.Type
                                    type: string
                                required:
                                - status
                                - type
                                type: object
                              type: array
                            phase:
                              description: phase represents the current phase of PersistentVolumeClaim.
                              type: string
                            resizeStatus:
                              description: resizeStatus stores status of resize operation.
                                ResizeStatus is not set by default but when expansion
                                is complete resizeStatus is set to empty string by
                                resize controller or kubelet. This is an alpha field
                                and requires enabling RecoverVolumeExpansionFailure
                                feature.
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: RisingWaveStatus is the status of RisingWave.
            properties:
              componentReplicas:
                description: ComponentReplicas is the replica/running status of components.
                properties:
                  compactor:
                    description: Compactor is the running status of compactor.
                    properties:
                      groups:
                        description: Groups are a list of running status of each group.
                        items:
                          description: ComponentGroupReplicasStatus are the running
                            status of Pods in group.
                          properties:
                            name:
                              description: Name is the name of the group.
                              type: string
                            running:
                              description: Running is the running replicas in the
                                group.
                              format: int32
                              type: integer
                            target:
                              description: Target is the target replicas of the group.
                              format: int32
                              type: integer
                          required:
                          - name
                          - running
                          - target
                          type: object
                        type: array
                      running:
                        description: Running is the total running replicas of the
                          component.
                        format: int32
                        type: integer
                      target:
                        description: Target is the total target replicas of the component.
                        format: int32
                        type: integer
                    required:
                    - running
                    - target
                    type: object
                  compute:
                    description: Compute is the running status of compute.
                    properties:
                      groups:
                        description: Groups are a list of running status of each group.
                        items:
                          description: ComponentGroupReplicasStatus are the running
                            status of Pods in group.
                          properties:
                            name:
                              description: Name is the name of the group.
                              type: string
                            running:
                              description: Running is the running replicas in the
                                group.
                              format: int32
                              type: integer
                            target:
                              description: Target is the target replicas of the group.
                              format: int32
                              type: integer
                          required:
                          - name
                          - running
                          - target
                          type: object
                        type: array
                      running:
                        description: Running is the total running replicas of the
                          component.
                        format: int32
                        type: integer
                      target:
                        description: Target is the total target replicas of the component.
                        format: int32
                        type: integer
                    required:
                    - running
                    - target
                    type: object
                  frontend:
                    description: Frontend is the running status of frontend.
                    properties:
                      groups:
                        description: Groups are a list of running status of each group.
                        items:
                          description: ComponentGroupReplicasStatus are the running
                            status of Pods in group.
                          properties:
                            name:
                              description: Name is the name of the group.
                              type: string
                            running:
                              description: Running is the running replicas in the
                                group.
                              format: int32
                              type: integer
                            target:
                              description: Target is the target replicas of the group.
                              format: int32
                              type: integer
                          required:
                          - name
                          - running
                          - target
                          type: object
                        type: array
                      running:
                        description: Running is the total running replicas of the
                          component.
                        format: int32
                        type: integer
                      target:
                        description: Target is the total target replicas of the component.
                        format: int32
                        type: integer
                    required:
                    - running
                    - target
                    type: object
                  meta:
                    description: Meta is the running status of meta.
                    properties:
                      groups:
                        description: Groups are a list of running status of each group.
                        items:
                          description: ComponentGroupReplicasStatus are the running
                            status of Pods in group.
                          properties:
                            name:
                              description: Name is the name of the group.
                              type: string
                            running:
                              description: Running is the running replicas in the
                                group.
                              format: int32
                              type: integer
                            target:
                              description: Target is the target replicas of the group.
                              format: int32
                              type: integer
                          required:
                          - name
                          - running
                          - target
                          type: object
                        type: array
                      running:
                        description: Running is the total running replicas of the
                          component.
                        format: int32
                        type: integer
                      target:
                        description: Target is the total target replicas of the component.
                        format: int32
                        type: integer
                    required:
                    - running
                    - target
                    type: object
                required:
                - compactor
                - compute
                - frontend
                - meta
                type: object
              conditions:
                description: Conditions are the conditions of the RisingWave.
                items:
                  description: RisingWaveCondition indicates a condition of RisingWave.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      nullable: true
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition
                      type: string
                    type:
                      description: Type of the condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: ObservedGeneration is the observed generation by controller.
                  It will be updated when controller observes the changes on the spec
                  and going to sync the subresources.
                format: int64
                type: integer
              storages:
                description: Storages are the status of the external storages.
                properties:
                  meta:
                    description: RisingWaveMetaStorageStatus is the status of meta
                      storage.
                    properties:
                      type:
                        description: MetaStorageType is the type name of meta storage.
                        type: string
                    required:
                    - type
                    type: object
                  object:
                    description: RisingWaveObjectStorageStatus is the status of object
                      storage.
                    properties:
                      type:
                        description: ObjectStorageType is the type name of object
                          storage.
                        type: string
                    required:
                    - type
                    type: object
                required:
                - meta
                - object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
