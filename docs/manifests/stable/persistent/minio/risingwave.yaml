apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    name: svc
  selector:
    app: postgres
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
stringData:
  username: "postgres"
  password: "mysecretpassword"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:17
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgres-credentials
        ports:
        - containerPort: 5432
          name: svc
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    app: minio
spec:
  clusterIP: None
  ports:
  - port: 9301
    name: service
  - port: 9400
    name: console
  selector:
    app: minio
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
stringData:
  username: "hummockadmin"
  password: "hummockadmin"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  labels:
    app: minio
spec:
  selector:
    matchLabels:
      app: minio
  serviceName: minio
  replicas: 1
  volumeClaimTemplates:
  - metadata:
      name: minio-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
  persistentVolumeClaimRetentionPolicy:
    whenScaled: Retain
    whenDeleted: Delete
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: quay.io/minio/minio:latest
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        args:
        - -c
        - mkdir -p /data/risingwave; /usr/bin/docker-entrypoint.sh server --address 0.0.0.0:9301 --console-address 0.0.0.0:9400 /data
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: username
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: password
        volumeMounts:
        - mountPath: /data
          name: minio-data
        ports:
        - name: service
          containerPort: 9301
          protocol: TCP
        - name: console
          containerPort: 9400
          protocol: TCP
---
apiVersion: risingwave.risingwavelabs.com/v1alpha1
kind: RisingWave
metadata:
  name: risingwave
spec:
  image: risingwavelabs/risingwave:v2.5.0-rc.1
  metaStore:
    postgresql:
      host: postgres
      port: 5432
      database: postgres
      credentials:
        secretName: postgres-credentials
  stateStore:
    dataDirectory: hummock001
    minio:
      credentials:
        secretName: minio-credentials
      bucket: risingwave
      endpoint: minio:9301
  components:
    meta:
      nodeGroups:
      - replicas: 1
        name: ''
        template:
          spec:
            volumes:
            - name: heap
              emptyDir:
                sizeLimit: 1Gi
            volumeMounts:
            - mountPath: /heap
              name: heap
            env:
            - name: MALLOC_CONF
              value: prof:true,lg_prof_interval:-1,lg_prof_sample:20,prof_prefix:/heap/
            - name: RW_HEAP_PROFILING_DIR
              value: /heap
            resources:
              limits:
                cpu: 1
                memory: 2Gi
              requests:
                cpu: 1
                memory: 2Gi
    compactor:
      nodeGroups:
      - replicas: 1
        name: ''
        template:
          spec:
            volumes:
            - name: heap
              emptyDir:
                sizeLimit: 1Gi
            volumeMounts:
            - mountPath: /heap
              name: heap
            env:
            - name: MALLOC_CONF
              value: prof:true,lg_prof_interval:-1,lg_prof_sample:20,prof_prefix:/heap/
            - name: RW_HEAP_PROFILING_DIR
              value: /heap
    frontend:
      nodeGroups:
      - replicas: 1
        name: ''
        template:
          spec:
            resources:
              limits:
                cpu: 1
                memory: 2Gi
              requests:
                cpu: 1
                memory: 2Gi
    compute:
      nodeGroups:
      - replicas: 1
        name: ''
        template:
          spec:
            volumes:
            - name: heap
              emptyDir:
                sizeLimit: 1Gi
            volumeMounts:
            - mountPath: /heap
              name: heap
            env:
            - name: MALLOC_CONF
              value: prof:true,lg_prof_interval:-1,lg_prof_sample:20,prof_prefix:/heap/
            - name: RW_HEAP_PROFILING_DIR
              value: /heap
            resources:
              limits:
                cpu: 8
                memory: 32Gi # Memory limit will be set to `RW_TOTAL_MEMORY_BYTES`
              requests:
                cpu: 8
                memory: 32Gi
