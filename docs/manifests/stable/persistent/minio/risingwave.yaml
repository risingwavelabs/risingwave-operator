apiVersion: v1
kind: Service
metadata:
  name: etcd
  labels:
    app: etcd
spec:
  clusterIP: None
  ports:
  - port: 2388
    name: client
  - port: 2389
    name: peer
  selector:
    app: etcd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
  labels:
    app: etcd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcd
  serviceName: etcd
  volumeClaimTemplates:
  - metadata:
      name: etcd-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Retain
  template:
    metadata:
      labels:
        app: etcd
    spec:
      containers:
      - name: etcd
        image: quay.io/coreos/etcd:v3.4.32
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --listen-client-urls
        - http://0.0.0.0:2388
        - --advertise-client-urls
        - http://etcd-0:2388
        - --listen-peer-urls
        - http://0.0.0.0:2389
        - --initial-advertise-peer-urls
        - http://etcd-0:2389
        - --listen-metrics-urls
        - http://0.0.0.0:2379
        - --name
        - etcd
        - --max-txn-ops
        - "999999"
        - --auto-compaction-mode
        - periodic
        - --auto-compaction-retention
        - 1m
        - --snapshot-count
        - "10000"
        - --data-dir
        - /var/lib/etcd
        - --max-request-bytes
        - "104857600"
        - --quota-backend-bytes
        - "8589934592"
        env:
        - name: ALLOW_NONE_AUTHENTICATION
          value: "1"
        ports:
        - containerPort: 2389
          name: peer
          protocol: TCP
        - containerPort: 2388
          name: client
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/etcd
          name: etcd-data
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    app: minio
spec:
  clusterIP: None
  ports:
  - port: 9301
    name: service
  - port: 9400
    name: console
  selector:
    app: minio
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
stringData:
  username: "hummockadmin"
  password: "hummockadmin"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  labels:
    app: minio
spec:
  selector:
    matchLabels:
      app: minio
  serviceName: minio
  replicas: 1
  volumeClaimTemplates:
  - metadata:
      name: minio-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
  persistentVolumeClaimRetentionPolicy:
    whenScaled: Retain
    whenDeleted: Delete
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: quay.io/minio/minio:latest
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        args:
        - -c
        - mkdir -p /data/risingwave; /usr/bin/docker-entrypoint.sh server --address 0.0.0.0:9301 --console-address 0.0.0.0:9400 /data
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: username
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: password
        volumeMounts:
        - mountPath: /data
          name: minio-data
        ports:
        - name: service
          containerPort: 9301
          protocol: TCP
        - name: console
          containerPort: 9400
          protocol: TCP
---
apiVersion: risingwave.risingwavelabs.com/v1alpha1
kind: RisingWave
metadata:
  name: risingwave
spec:
  image: risingwavelabs/risingwave:v1.8.4
  metaStore:
    etcd:
      endpoint: etcd:2388
  stateStore:
    dataDirectory: hummock001
    minio:
      credentials:
        secretName: minio-credentials
      bucket: risingwave
      endpoint: minio:9301
  components:
    meta:
      nodeGroups:
      - replicas: 1
        name: ''
        template:
          spec:
            volumes:
            - name: heap
              emptyDir:
                sizeLimit: 1Gi
            volumeMounts:
            - mountPath: /heap
              name: heap
            env:
            - name: MALLOC_CONF
              value: prof:true,lg_prof_interval=-1,lg_prof_sample=20,prof_prefix:/heap/
            - name: RW_HEAP_PROFILING_DIR
              value: /heap
            resources:
              limits:
                cpu: 1
                memory: 2Gi
              requests:
                cpu: 1
                memory: 2Gi
    compactor:
      nodeGroups:
      - replicas: 1
        name: ''
        template:
          spec:
            volumes:
            - name: heap
              emptyDir:
                sizeLimit: 1Gi
            volumeMounts:
            - mountPath: /heap
              name: heap
            env:
            - name: MALLOC_CONF
              value: prof:true,lg_prof_interval=-1,lg_prof_sample=20,prof_prefix:/heap/
            - name: RW_HEAP_PROFILING_DIR
              value: /heap
    frontend:
      nodeGroups:
      - replicas: 1
        name: ''
        template:
          spec:
            resources:
              limits:
                cpu: 1
                memory: 2Gi
              requests:
                cpu: 1
                memory: 2Gi
    compute:
      nodeGroups:
      - replicas: 1
        name: ''
        template:
          spec:
            volumes:
            - name: heap
              emptyDir:
                sizeLimit: 1Gi
            volumeMounts:
            - mountPath: /heap
              name: heap
            env:
            - name: MALLOC_CONF
              value: prof:true,lg_prof_interval=-1,lg_prof_sample=20,prof_prefix:/heap/
            - name: RW_HEAP_PROFILING_DIR
              value: /heap
            resources:
              limits:
                cpu: 8
                memory: 32Gi # Memory limit will be set to `RW_TOTAL_MEMORY_BYTES`
              requests:
                cpu: 8
                memory: 32Gi