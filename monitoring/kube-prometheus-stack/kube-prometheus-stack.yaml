prometheus-node-exporter:
  hostRootFsMount:
    enabled: false

# Run `helm show values prometheus-community/kube-prometheus-stack` to get information about the below values
prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
  additionalServiceMonitors:
  - name: prometheus-service-monitor-rw-operator
    namespaceSelector: 
      matchNames:
      - risingwave-operator-system
    endpoints:
    - interval: 10s
      path: /metrics
      port: http
      scheme: https
      scrapeTimeout: 5s
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecureSkipVerify: true
    selector:
      matchLabels: 
        control-plane: controller-manager


# Pod monitor does not work ATM 
  additionalPodMonitors:
  ## Name of the PodMonitor to create
  ##
  - name: "prometheus-pod-monitor-rw-operator"

    ## Additional labels to set used for the PodMonitorSelector. Together with standard labels from
    ## the chart
    ##
    # additionalLabels: {}

    ## Pod label for use in assembling a job name of the form <label value>-<port>
    ## If no label is specified, the pod endpoint name is used.
    ##
    # jobLabel: ""

    ## Label selector for pods to which this PodMonitor applies
    ##
    selector:
      matchLabels:
        control-plane: controller-manager

    ## PodTargetLabels transfers labels on the Kubernetes Pod onto the target.
    ##
    # podTargetLabels: {}

    ## SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
    ##
    # sampleLimit: 0

    ## Namespaces from which pods are selected
    ##
    namespaceSelector:
      ## Match any namespace
      ##
      # any: false

      ## Explicit list of namespace names to select
      ##
      matchNames:
      - risingwave-operator-system

    ## Endpoints of the selected pods to be monitored
    ## https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#podmetricsendpoint
    ##
    podMetricsEndpoints: # wrong endpoint? This is not the service that we access here
    - interval: 10s
      path: /metrics
      port: metrics # 8080
      scheme: https
      scrapeTimeout: 5s
      #tlsConfig:
      #  insecureSkipVerify: true
    #- interval: 10s
    #  path: /metrics
    #  port: https
    #  scheme: https
    #  scrapeTimeout: 5s
    #  tlsConfig:
    #    insecureSkipVerify: true
    #  bearerTokenSecret: # We do not have this as a secret, but only as a file /var/run/secrets/kubernetes.io/serviceaccount/token
    
          # add this to the rw operator deployment
          # - containerPort: 8080
          #   name: metrics 
          #   protocol: TCP


grafana:
  dashboardProviders:
    rw-dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: risingwave
        orgId: 1
        folder: RisingWave
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/risingwave
  dashboards:
    risingwave:
      risingwave-dashboard:
        url: https://raw.githubusercontent.com/risingwavelabs/risingwave-operator/main/monitoring/grafana/risingwave-dashboard.json
