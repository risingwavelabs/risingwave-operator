prometheus-node-exporter:
  hostRootFsMount:
    enabled: false

# Maybe we can also do this via an additional podmonitor? 
# This way me may not need the additional service at all.
# Would make deployment simpler
prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
  additionalServiceMonitors:
  - name: prometheus-service-monitor-rw-operator
    additionalLabels: {} ## Additional labels to set used for the ServiceMonitorSelector. Together with standard labels from the chart
    targetLabels: [] ## labels to transfer from the kubernetes service to the target
    podTargetLabels: [] ## labels to transfer from the kubernetes pods to the target
    namespaceSelector: 
      matchNames:
      - risingwave-operator-system
    endpoints:
    - interval: 10s
      path: /metrics
      port: http
      scheme: https
      scrapeTimeout: 5s
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecureSkipVerify: true
    selector:
      matchLabels: 
        release: prometheus

grafana:
  dashboardProviders:
    rw-dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: risingwave
        orgId: 1
        folder: RisingWave
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/risingwave
  dashboards:
    risingwave:
      risingwave-dashboard:
        url: https://raw.githubusercontent.com/risingwavelabs/risingwave-operator/main/monitoring/grafana/risingwave-dashboard.json
