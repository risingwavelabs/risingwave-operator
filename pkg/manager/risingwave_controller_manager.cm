bind v1 k8s.io/api/core/v1
bind apps/v1 k8s.io/api/apps/v1
bind monitoring.coreos.com/v1 github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring/v1
bind risingwave.risingwavelabs.com/v1alpha1 github.com/risingwavelabs/risingwave-operator/apis/risingwave/v1alpha1
bind apps.kruise.io/v1alpha1 github.com/openkruise/kruise-api/apps/v1alpha1
bind apps.kruise.io/v1beta1 github.com/openkruise/kruise-api/apps/v1beta1

alias Pod v1/Pod
alias Service v1/Service
alias Secret v1/Secret
alias ConfigMap v1/ConfigMap
alias Deployment apps/v1/Deployment
alias StatefulSet apps/v1/StatefulSet
alias RisingWave risingwave.risingwavelabs.com/v1alpha1/RisingWave
alias ServiceMonitor monitoring.coreos.com/v1/ServiceMonitor
alias CloneSet apps.kruise.io/v1alpha1/CloneSet
alias AdvancedStatefulSet apps.kruise.io/v1beta1/StatefulSet

// RisingWaveControllerManager encapsulates the states and actions used by RisingWaveController.
decl RisingWaveControllerManager for RisingWave {
    // ===================================================
    // States and actions for RisingWave components.
    // ===================================================

    state {
        // Service for meta nodes.
        metaService Service {
            name=${target.Name}-meta
            owned
        }

        // Service for frontend nodes.
        frontendService Service {
            name=${target.Name}-frontend
            owned
        }

        // Service for compute nodes.
        computeService Service {
            name=${target.Name}-compute
            owned
        }

        // Service for compactor nodes.
        compactorService Service {
            name=${target.Name}-compactor
            owned
        }

        // Service for connector nodes.
        connectorService Service {
            name=${target.Name}-connector
            owned
        }

        // ConfigMap for RisingWave configs.
        configConfigMap ConfigMap {
            name=${target.Name}-default-config
            owned
        }

        // StatefulSets for meta nodes.
        metaStatefulSets []StatefulSet {
            labels/risingwave/name=${target.Name}
            labels/risingwave/component=meta
            owned
        }

        // Deployments for frontend nodes.
        frontendDeployments []Deployment {
            labels/risingwave/name=${target.Name}
            labels/risingwave/component=frontend
            owned
        }

        // StatefulSets for compute nodes.
        computeStatefulSets []StatefulSet {
            labels/risingwave/name=${target.Name}
            labels/risingwave/component=compute
            owned
        }

        // Deployments for compactor nodes.
        compactorDeployments []Deployment {
            labels/risingwave/name=${target.Name}
            labels/risingwave/component=compactor
            owned
        }

        // Deployments for connector nodes.
        connectorDeployments []Deployment {
            labels/risingwave/name=${target.Name}
            labels/risingwave/component=connector
            owned
        }

        metaAdvancedStatefulSets []AdvancedStatefulSet {
            labels/risingwave/name=${target.Name}
            labels/risingwave/component=meta
            owned
        }

         // Deployments for frontend nodes.
        frontendCloneSets []CloneSet {
            labels/risingwave/name=${target.Name}
            labels/risingwave/component=frontend
            owned
        }

        // StatefulSets for compute nodes.
        computeAdvancedStatefulSets []AdvancedStatefulSet {
            labels/risingwave/name=${target.Name}
            labels/risingwave/component=compute
            owned
        }

        // Deployments for compactor nodes.
        compactorCloneSets []CloneSet {
            labels/risingwave/name=${target.Name}
            labels/risingwave/component=compactor
            owned
        }

        // Deployments for connector nodes.
        connectorCloneSets []CloneSet {
            labels/risingwave/name=${target.Name}
            labels/risingwave/component=connector
            owned
        }
    }

    action {
        // SyncMetaService creates or updates the service for meta nodes.
        SyncMetaService(metaService)

        // SyncMetaStatefulSets creates or updates the StatefulSets for meta nodes.
        SyncMetaStatefulSets(metaStatefulSets)

        // SyncMetaAdvancedStatefulSets creates or updates the CloneSets for meta nodes.
        SyncMetaAdvancedStatefulSets(metaAdvancedStatefulSets)
        
        // WaitBeforeMetaServiceIsAvailable waits (aborts the workflow) before the meta service is available.
        WaitBeforeMetaServiceIsAvailable(metaService)

        // WaitBeforeMetaStatefulSetsReady waits (aborts the workflow) before the meta StatefulSets are ready.
        WaitBeforeMetaStatefulSetsReady(metaStatefulSets)

        // WaitBeforeMetaAdvancedStatefulSetsReady waits (aborts the workflow) before the meta advanced StatefulSets are ready.
        WaitBeforeMetaAdvancedStatefulSetsReady(metaAdvancedStatefulSets)

        // SyncFrontendService creates or updates the service for frontend nodes.
        SyncFrontendService(frontendService)

        // SyncFrontendDeployments creates or updates the Deployments for frontend nodes.
        SyncFrontendDeployments(frontendDeployments)

        // SyncFrontendCloneSets creates or updates the Deployments for frontend nodes.
        SyncFrontendCloneSets(frontendCloneSets)

        // WaitBeforeFrontendDeploymentsReady waits (aborts the workflow) before the frontend Deployments are ready.
        WaitBeforeFrontendDeploymentsReady(frontendDeployments)

        // WaitBeforeFrontendCloneSetsReady waits (aborts the workflow) before the frontend CloneSets are ready.
        WaitBeforeFrontendCloneSetsReady(frontendCloneSets)

        // SyncComputeService creates or updates the service for compute nodes.
        SyncComputeService(computeService)

        // SyncComputeStatefulSets creates or updates the StatefulSets for compute nodes.
        SyncComputeStatefulSets(computeStatefulSets)

        // SyncComputeAdvancedStatefulSets creates or updates the StatefulSets for compute nodes.
        SyncComputeAdvancedStatefulSets(computeAdvancedStatefulSets)

        // WaitBeforeComputeStatefulSetsReady waits (aborts the workflow) before the compute StatefulSets are ready.
        WaitBeforeComputeStatefulSetsReady(computeStatefulSets)

        // WaitBeforeComputeStatefulSetsReady waits (aborts the workflow) before the compute advanced StatefulSets are ready.
        WaitBeforeComputeAdvancedStatefulSetsReady(computeAdvancedStatefulSets)

        // SyncCompactorService creates or updates the service for compactor nodes.
        SyncCompactorService(compactorService)

        // SyncCompactorDeployments creates or updates the Deployments for compactor nodes.
        SyncCompactorDeployments(compactorDeployments)

        // SyncCompactorCloneSets creates or updates the Deployments for compactor nodes.
        SyncCompactorCloneSets(compactorCloneSets)

        // WaitBeforeCompactorDeploymentsReady waits (aborts the workflow) before the compactor Deployments are ready.
        WaitBeforeCompactorDeploymentsReady(compactorDeployments)

        // WaitBeforeCompactorDeploymentsReady waits (aborts the workflow) before the compactor CloneSets are ready.
        WaitBeforeCompactorCloneSetsReady(compactorCloneSets)

        // SyncConnectorService creates or updates the service for connector nodes.
        SyncConnectorService(connectorService)

        // SyncConnectorDeployments creates or updates the Deployments for connector nodes.
        SyncConnectorDeployments(connectorDeployments)

        // SyncConnectorCloneSets creates or updates the Deployments for connector nodes.
        SyncConnectorCloneSets(connectorCloneSets)

        // WaitBeforeConnectorDeploymentsReady waits (aborts the workflow) before the connector Deployments are ready.
        WaitBeforeConnectorDeploymentsReady(connectorDeployments)

        // WaitBeforeConnectorDeploymentsReady waits (aborts the workflow) before the connector CloneSets are ready.
        WaitBeforeConnectorCloneSetsReady(connectorCloneSets)

        // SyncConfigConfigMap creates or updates the configmap for RisingWave configs.
        SyncConfigConfigMap(configConfigMap)
    }

    // ===================================================
    // States and actions for third-party components.
    // ===================================================

    state {
        // ServiceMonitor for the entire RisingWave.
        serviceMonitor ServiceMonitor {
            name=risingwave-${target.Name}
            labels/risingwave/name=${target.Name}
            owned
        }
    }

    action {
        // SyncServiceMonitor creates or updates the service monitor for RisingWave.
        SyncServiceMonitor(serviceMonitor)
    }

    // ===================================================
    // The actions that needs all states.
    // ===================================================

    action {
        // CollectRunningStatisticsAndSyncStatus collects running statistics and sync them into the status.
        CollectRunningStatisticsAndSyncStatus(frontendService, metaService, computeService, compactorService, connectorService, metaStatefulSets, frontendDeployments, computeStatefulSets, compactorDeployments, connectorDeployments, configConfigMap)
        CollectOpenKruiseRunningStatisticsAndSyncStatus(frontendService, metaService, computeService, compactorService, connectorService, metaAdvancedStatefulSets, frontendCloneSets, computeAdvancedStatefulSets, compactorCloneSets, connectorCloneSets, configConfigMap)
    }
}